{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/firebase.js","../../src/EventManager.js","../../src/utility/Button.svelte","../../src/utility/Input.svelte","../../src/Pages/LoginPage.svelte","../../src/constants.js","../../src/api.js","../../src/utility/Popup.svelte","../../src/utility/Icon.svelte","../../src/Sidebar.svelte","../../src/Task.svelte","../../src/Component.svelte","../../src/Container.svelte","../../src/Pages/AppPage.svelte","../../src/Pages/GeneralTasksPage.svelte","../../src/Navigation.svelte","../../src/Pages/AllTasksPage.svelte","../../src/Pages/AllComponentsPage.svelte","../../src/utility/LoadSpinner.svelte","../../src/utility/ProcessSpinner.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","const firebaseConfig = {\n  apiKey: \"AIzaSyCZ2HXCcsbMsIHMxAdqiStOOx7AA5Xhkms\",\n  authDomain: \"tick-todo-app.firebaseapp.com\",\n  projectId: \"tick-todo-app\",\n  storageBucket: \"tick-todo-app.appspot.com\",\n  messagingSenderId: \"114323470299\",\n  appId: \"1:114323470299:web:5db79253e64602c2f199fe\",\n  measurementId: \"G-SHK9S7SRYF\"\n};\n  \n  Object.freeze(firebaseConfig);\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  \n  export const signinUser = (email,password) => {\n    return firebase.auth().signInWithEmailAndPassword(email, password);\n  };\n  \n  export const signoutUser = () => {\n    firebase.auth().signOut();\n  };\n\n  export const AUTH = firebase.auth();\n  ","const events = {};\n\nconst EVENTS = {\n    SHOW_SPINNER : 'SHOW_SPINNER',\n    HIDE_SPINNER : 'HIDE_SPINNER',\n    \n    SELECT_VIEW : \"SELECT_VIEW\",\n    GET_VIEW_DATA : \"GET_VIEW_DATA\",\n    SEND_VIEW_DATA : \"SEND_VIEW_DATA\",\n\n    SELECT_LIST : \"SELECT_LIST\",\n    OPEN_NEW_LIST_POPUP : \"OPEN_NEW_LIST_POPUP\",\n    OPEN_EDIT_LIST_POPUP : \"OPEN_EDIT_LIST_POPUP\",\n    DELETE_LIST : \"DELETE_LIST\",\n\n    SELECT_TASK : \"SELECT_TASK\",\n    OPEN_NEW_TASK_POPUP : \"OPEN_NEW_TASK_POPUP\",\n    OPEN_VIEW_TASK_POPUP : \"OPEN_VIEW_TASK_POPUP\",\n    OPEN_EDIT_TASK_POPUP : \"OPEN_EDIT_TASK_POPUP\",\n    DELETE_TASK : \"DELETE_TASK\",\n    \n    OPEN_NEW_COMPONENT_POPUP : \"OPEN_NEW_COMPONENT_POPUP\",\n    OPEN_VIEW_COMPONENT_POPUP : \"OPEN_VIEW_COMPONENT_POPUP\",\n    OPEN_EDIT_COMPONENT_POPUP : \"OPEN_EDIT_COMPONENT_POPUP\",\n    DELETE_COMPONENET : \"DELETE_COMPONENET\",\n\n    CLOSE_POPUP : \"CLOSE_POPUP\"\n}\n\nObject.freeze(EVENTS);\n\nconst registerListener = (eventName, callback) => {\n    if(!eventName || !callback) return;\n    try {\n        if (!events[eventName]) {\n            events[eventName] = [];\n        }\n        \n        const duplicate = events[eventName].find((listener) => {\n            return listener.callback == callback;\n        });\n\n        if (!duplicate) {\n            events[eventName].push({ callback});\n        }\n    } catch (error) {\n        console.error('@error : ',error)\n    }\n\n};\n\nconst unregisterListener = (eventName, callback) => {\n    try {\n        if (events[eventName]) {\n            events[eventName] = events[eventName].filter(cb => cb.callback != callback);\n        }\n    } catch (error) {\n        console.error('@error : ',error)\n    }\n  };\n \nconst fireEvent = (eventName, payload) => {\n    if (events[eventName]) {\n        const listeners = events[eventName];\n        listeners.forEach((listener) => {       \n            try {\n                listener.callback.call(this,payload);\n            } catch (error) {\n                console.error('@eventName : ',eventName) &&\n                console.error('@listener : ',listener) &&\n                console.error('@payload : ',payload) &&\n                console.error('@error : ',error)\n            }\n        });\n    }\n};\n\nexport {\n    registerListener,\n    unregisterListener,\n    fireEvent,\n    EVENTS\n};\n ","<script>\n\n    export let label;\n    export let onClick;\n    export let type;\n\n</script>\n\n\n<button class=\"pointer text-bold border-box\" data-type={type} on:click={onClick}>{label}</button>\n\n<style>\n    button{\n        border: none;\n        outline: none;\n        padding: 0.5rem 2rem;\n        border-radius: 4px;\n        display: inline-block;\n        vertical-align: middle;\n        box-sizing: border-box;\n        font-size: 1rem;\n    }\n\n    button[data-type=\"primary\"]{\n        background-color: var(--btn-primary-color);\n        border : 2px solid var(--btn-primary-color);\n        color: white;\n    }\n\n    button[data-type=\"secondary\"]{\n        background-color: var(--btn-secondary-color);\n        border : 2px solid var(--btn-secondary-color);\n        color: white;\n    }\n\n    button[data-type=\"warning\"]{\n        background-color: var(--warning-color);\n        border : 2px solid var(--warning-color);\n        color: white;\n    }\n\n    button[data-type=\"danger\"]{\n        background-color: var(--danger-color);\n        border : 2px solid var(--danger-color);\n        color: white;\n    }\n\n    button[data-type=\"success\"]{\n        background-color: var(--success-color);\n        border : 2px solid var(--success-color);\n        color: white;\n    }\n\n    button[data-type=\"link primary\"]{\n        color: var(--btn-primary-color);\n        text-decoration: underline;\n        font-weight: 600;\n        padding: 0;\n        background-color: transparent;\n    }\n    \n</style>","<script>\n\n    export let hasLabel = false;\n    export let type;\n    export let name;\n    export let label;\n    export let placeholder;\n    export let onChange;\n    export let onKeyUp;\n    export let value = \"\";\n    export let width_class;\n    export let label_class = 'light';\n    export let classes;\n    export let data_field;\n    export let options;\n    export let data_type\n    export let readOnly;\n    export let Required;\n</script>\n\n{#if hasLabel}\n    <label class=\"{label_class}\" for={name}>{label}{Required ? ' *' : ''}</label>  \n{/if}\n\n{#if type === 'select'}\n    <select class=\"column flex grow border-bottom-primary text-primary {classes} {width_class} border-box text-center pointer border-box justify-center status-column\" {value} {name} on:change={onChange} data-type={data_type} data-field={data_field} disabled={readOnly}>\n        {#each options as status}\n            <option value={status} class=\"option bg-white text-primary\">{status}</option>\n        {/each}\n    </select>\n    {:else if type === \"text-long\"}\n        <textarea class=\"border-primary text-primary border-box bg-white {width_class}\" rows=\"10\" on:change={onChange} data-type={data_type} data-field={data_field} {value} readonly={readOnly}></textarea>\n    {:else}\n        <input class=\"{classes} border-box {width_class}\" {type} {name} on:change={onChange} on:keyup={onKeyUp} {value} {placeholder} data-type={data_type} data-field={data_field} readonly={readOnly}/>\n{/if}\n\n\n<style>\n\n    input{\n        padding: 0.5em;\n        outline: none;\n        border : none;\n    }\n\n    label {\n        margin-bottom: 0.25rem;\n        color: #d0d2d6;\n        font-size: .857rem;\n    }\n\n    .width-half{\n        width: 50%;\n    }\n\n    .width-full{\n        width: 100%;\n    }\n\n    label.dark{\n        color: var(--text-primary-color);\n    }\n    \n    label.light{\n        color: var(--text-secondary-color);\n    }\n\n    input[type=\"text\"]{\n        border: none;\n        outline: none;\n        color: var(--text-secondary-color);\n    }\n\n    input[type=\"date\"]{\n        border: none;\n        outline: none;\n        flex-shrink: 0.75;\n        color: var(--text-secondary-color);\n    }\n\n    ::-webkit-calendar-picker-indicator {\n        filter: invert(1);\n    }\n\n    select{\n        border: none;\n        outline: none;\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        text-indent: 1px;\n        text-overflow: '';\n    }\n\n    input[data-type=\"field\"][type=\"text\"]{\n        border: 1px solid var(--border-primary-color);\n        background-color: var(--secondary-color);\n        color : var(--text-tertiary-color);\n        border-radius: .357rem;\n    }\n\n    input[data-type=\"field\"][type=\"email\"]{\n        border: 1px solid var(--border-primary-color);\n        background-color: var(--secondary-color);\n        color : var(--text-tertiary-color);\n        border-radius: .357rem;\n    }\n\n    input[data-type=\"field\"][type=\"password\"]{\n        border: 1px solid var(--border-primary-color);\n        background-color: var(--secondary-color);\n        color : var(--text-tertiary-color);\n        border-radius: .357rem;\n    }\n\n    input[data-type=\"field\"][type=\"date\"]{\n        border: 1px solid var(--border-primary-color);\n        background-color: var(--secondary-color);\n        color : var(--text-tertiary-color);\n        border-radius: .357rem;\n    }\n\n    textarea[data-type=\"field\"]{\n        border: 1px solid var(--border-primary-color);\n        background-color: var(--secondary-color);\n        color : var(--text-tertiary-color);\n        border-radius: .357rem;\n    }\n\n    select[data-type=\"field\"]{\n        border-radius: .357rem;\n    }\n\n    select:disabled {\n        opacity: 1;\n    }\n\n    input:-internal-autofill-selected {\n        border: 1px solid var(--border-primary-color) !important;\n        background-color: var(--secondary-color) !important;\n        color : var(--text-tertiary-color) !important;\n        border-radius: .357rem !important;\n    }\n\n    label.has-error{\n        color: #ea5455 !important;\n    }\n\n    input.has-error{\n        background-color: #ea545520 !important;\n        border-color: #ea5455 !important;\n    }\n\n</style>","<script>\n    import { signinUser } from \"../firebase\";\n    import {fireEvent,EVENTS} from \"../EventManager\";\n    import Button from \"../utility/Button.svelte\";\n    import Input from \"../utility/Input.svelte\";\n\n    let user = {\n        email:\"\",\n        name:\"\"\n    }\n\n    const handleChange = (e) => {\n        user[e.target.name] = e.target.value;\n    }\n\n    const onSignIn = () => {\n        \n        const email = user.email;\n        const password = user.password;\n\n        if(email && password){\n            fireEvent(EVENTS.SHOW_SPINNER,{});\n            signinUser(email,password)\n            .then (res => {\n                fireEvent(EVENTS.HIDE_SPINNER,{});\n            })\n            .catch(err => {\n                fireEvent(EVENTS.HIDE_SPINNER,{});\n            });\n        }\n    }\n\n</script>\n\n<style>\n\n    .container{\n        margin: 0;\n        padding: 0;\n        height: 100vh;\n    }\n\n    .right{\n        width: 30%;\n        height: 100%;\n        background-color: var(--secondary-color);\n    }\n\n    .left{\n        width: 70%;\n        height: 100%;\n    }\n\n    .app-header{\n        padding: 1.5em 1em;\n    }\n\n    .right header{\n        padding: 1.5em 1em;\n    }\n\n    .app-footer{\n        padding: 1.5em 1em;\n    }\n\n    .title {\n        font-family: normal;\n        font-size: 1.75em;\n        color: var(--primary-color);\n    }\n\n    .sub-title{\n        font-size: 1rem;\n        color: white;\n    }\n\n    .logo {\n        width: 8em;\n        margin: 0 5px;\n    }\n\n    .form-container{\n        height: 100vh;\n    }\n\n    .form {\n        padding: 0 3rem;\n        width: 25%;\n    }\n\n    .highlight{\n        color: var(--secondary-color);\n    }\n\n    .home{\n        width: 95%;\n        height: 95%;\n    }\n\n    .form{\n        width: 100%;\n        height: 100%;\n    }\n\n    .sub-container{\n        width: 100%;\n    }\n\n    .illustration-container{\n        height: 80%;\n    }\n    \n    .dev-name{\n        padding: 0.25rem 0.5rem;\n        background: white;\n        border-radius: 5px;\n    }\n\n    \n\n</style>\n\n<div class=\"flex flex-row container\">\n    \n        <div class=\"left\">\n            <header class=\"app-header flex justify-space-between align-center\">\n                <span class=\"app-name flex align-center text-bold text-primary\">\n                    <img class=\"logo\" src=\"./logo.svg\" alt=\"worklist\"/>\n                </span>\n            </header>\n            \n            <div class=\"illustration-container flex justify-center flex-row align-center grow\">\n                <div class=\"flex justify-center flex-column align-center tagline-container\">\n                    <img class=\"home\" src=\"./login.svg\" alt=\"worklist\"/>    \n                </div>\n            </div>\n    \n            \n        </div>\n\n        <div class=\"right\">\n            <div class=\"form-container flex justify-center flex-column login-form\">\n                <header class=\"flex align-center justify-end\">\n                    <Button label=\"Donate\" type=\"danger\"/>\n                </header>\n                <div class=\"sub-container grow flex justify-center flex-row\">\n                    <div class=\"form form-right flex justify-center flex-column\">\n                        <span class=\"title flex align-center text-bold text-primary\">\n                            Welcome to worklist\n                        </span>\n                        <br/>\n                        <span class=\"sub-title flex align-center text-primary\">\n                            Please sign-in to your account and start the adventure\n                        </span>\n                        <br/>\n                        <br/>\n                        <Input data_type=\"field\" name=\"email\" type=\"email\" label=\"Email\" label_class=\"light\" hasLabel onChange={handleChange}/>\n                        <br/>\n                        <Input data_type=\"field\" name=\"password\" type=\"password\" label=\"Password\" label_class=\"light\" hasLabel onChange={handleChange}/>\n                        <br/>\n                        <Button onClick={onSignIn} label=\"Login\" type=\"primary\"/>\n                    </div>\n                </div>\n                <footer class=\"app-footer flex justify-end align-center bg-transparent\">\n                    <span class=\"dev-name text-bold highlight text-underline\">Made with ❤️ by Suban Khoja</span>\n                </footer>\n            </div>\n           \n        </div>\n       \n</div>","\nexport const APP_NAME = 'onelist';\n\nconst API = {\n    BASE_ENDPOINT : 'https://worklist1-developer-edition.ap27.force.com/services/apexrest/api/v1/',\n    ENDPOINTS : {\n        \"getUserData\" : 'getUserData',\n        \"getUserGeneralTasks\" : 'getUserGeneralTasks',\n        \"createList\" : \"createList\",\n        \"updateList\" : \"updateList\",\n        \"deleteList\" : \"deleteList\",\n        \"createTask\" : \"createTask\",\n        \"updateTask\" : \"updateTask\",\n        \"deleteTask\" : \"deleteTask\",\n        \"createGeneralTask\" : \"createGeneralTask\",\n        \"updateGeneralTask\" : \"updateGeneralTask\",\n        \"deleteGeneralTask\" : \"deleteGeneralTask\",\n        \"deleteBulkGeneralTask\" : \"deleteBulkGeneralTask\",\n        \"createComponent\" : \"createComponent\",\n        \"updateComponent\" : \"updateComponent\",\n        \"deleteComponent\" : \"deleteComponent\",\n        \"exportListComponents\":\"exportListComponents\"\n    }\n};\n\nconst DEFAULTS = {\n    LIST_STATUS : \"Not Started\",\n    TASK_STATUS : \"Not Started\",\n    COMPONENT_TYPE : \"Apex Class\"\n}\n\nconst LIST_STATUS = [\n    \"Not Started\",\n    \"In Progress\",\n    \"Completed\",\n];\n\nconst TASK_STATUS = [\n    \"Not Started\",\n    \"In Progress\",\n    \"Completed\",\n];\n\nconst COMPONENT_TYPE_LIST = [\n    \"Apex Class\",\n    \"LWC\",\n    \"Omniscript\",\n    \"Integration Procedure\",\n    \"Dataraptor\",\n    \"Custom Field\",\n    \"Page Layout\",\n    \"Lightning Record Type\",\n    \"Custom Button\",\n    \"Flow\",\n    \"Email Template\",\n    \"Email Alert\"\n];\n\nconst TASK_COLUMN = [\n    {\n        label : \"Name\",\n        key : \"task_name\",\n        show_in_list : true,\n        show_in_detail : true,\n        show_header : false,\n        allow_inline_edit : false,\n        field_type : \"text\"\n    },\n    {\n        label : \"Start Date\",\n        key : \"task_start_date\",\n        show_in_list : true,\n        show_in_detail : false,\n        show_header : true,\n        allow_inline_edit : true,\n        field_type : \"date\"\n    },\n    {\n        label : \"End Date\",\n        key : \"task_end_date\",\n        show_in_list : true,\n        show_in_detail : false,\n        show_header : true,\n        allow_inline_edit : true,\n        field_type : \"date\"\n    },\n    {\n        label : \"Status\",\n        key : \"task_status\",\n        show_in_list : true,\n        show_in_detail : false,\n        show_header : true,\n        allow_inline_edit : true,\n        field_type : \"select\"\n    },\n    {\n        label : \"Notes\",\n        key : \"task_note\",\n        show_in_list : false,\n        show_in_detail : true,\n        show_header : false,\n        allow_inline_edit : false,\n        field_type : \"text-long\"\n    }\n];\n\nconst COMPONENT_COLUMN = [\n    {\n        label : \"Name\",\n        key : \"component_name\",\n        show_in_list : true,\n        show_in_detail : true,\n        show_header : false,\n        allow_inline_edit : false,\n        field_type : \"text\"\n    },\n    {\n        label : \"Version\",\n        key : \"component_version\",\n        show_in_list : true,\n        show_in_detail : false,\n        show_header : true,\n        allow_inline_edit : true,\n        field_type : \"text\"\n    },\n    {\n        label : \"Date\",\n        key : \"component_date\",\n        show_in_list : true,\n        show_in_detail : false,\n        show_header : true,\n        allow_inline_edit : true,\n        field_type : \"text\"\n    },\n    {\n        label : \"Parent Component\",\n        key : \"component_parent_name\",\n        show_in_list : true,\n        show_in_detail : true,\n        show_header : true,\n        allow_inline_edit : true,\n        field_type : \"text\"\n    },\n    {\n        label : \"Type\",\n        key : \"component_type\",\n        show_in_list : true,\n        show_in_detail : false,\n        show_header : true,\n        allow_inline_edit : true,\n        field_type : \"select\"\n    }\n];\n\nconst LIST_COLUMN = [\n    {\n        label : \"Name\",\n        key : \"list_name\",\n        show_in_list : true,\n        show_in_detail : true,\n        show_header : false,\n        allow_inline_edit : false,\n        field_type : \"text\"\n    },\n    {\n        label : \"Start Date\",\n        key : \"list_start_date\",\n        show_in_list : false,\n        show_in_detail : true,\n        show_header : false,\n        allow_inline_edit : true,\n        field_type : \"date\"\n    },\n    {\n        label : \"End Date\",\n        key : \"list_end_date\",\n        show_in_list : false,\n        show_in_detail : true,\n        show_header : false,\n        allow_inline_edit : true,\n        field_type : \"date\"\n    },\n    {\n        label : \"Status\",\n        key : \"list_status\",\n        show_in_list : false,\n        show_in_detail : true,\n        show_header : false,\n        allow_inline_edit : false,\n        field_type : \"select\"\n    },\n    {\n        label : \"Description\",\n        key : \"list_description\",\n        show_in_list : false,\n        show_in_detail : true,\n        show_header : false,\n        allow_inline_edit : false,\n        field_type : \"text-long\"\n    }\n];\n\nconst getStatusClass = (_status) => {\n    if(!_status) return '';\n    return _status.replace(' ','-');\n}\n\nconst getComponentTypeClass = (_type) => {\n    if(!_type) return '';\n    return _type.replace(' ','-');\n}\n\nconst getBulletClass = (_status) => {\n    if(!_status) return '';\n    return 'Bullet-'+_status.replace(' ','-');\n}\n\nconst encoding_decoding = (str,key) => {\n    let enc = \"\";\n    let encodedKey = \"\";\n    // make sure that input is string\n    str = str.toString();\n    for (let i = 0; i < key.length; i++) {\n        encodedKey += key.charCodeAt(i);\n    }\n    encodedKey = \"\"+encodedKey;\n    encodedKey = encodedKey.substr(0,10);\n    for (let i = 0; i < str.length; i++) {\n        // create block\n        const a = str.charCodeAt(i);\n        // bitwise XOR\n        const b = a ^ encodedKey;\n        enc = enc + String.fromCharCode(b);\n    }\n    return enc;\n}   \n\n\nObject.freeze(API);\nObject.freeze(LIST_STATUS);\nObject.freeze(TASK_STATUS);\nObject.freeze(TASK_COLUMN);\nObject.freeze(LIST_COLUMN);\nObject.freeze(COMPONENT_TYPE_LIST);\nObject.freeze(COMPONENT_COLUMN);\nObject.freeze(DEFAULTS);\n\nexport {\n    API,\n    LIST_STATUS,\n    TASK_COLUMN,\n    TASK_STATUS,\n    COMPONENT_COLUMN,\n    LIST_COLUMN,\n    COMPONENT_TYPE_LIST,\n    DEFAULTS,\n    getStatusClass,\n    getComponentTypeClass,\n    getBulletClass\n};\n\n\n","import { API } from \"./constants\";\n\nexport const getUserDataCallout = (user_id) => {\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.getUserData,{\n        method : 'POST',\n        body : JSON.stringify({\n            user_id\n        })\n    })\n    .then(res => res.json())\n    .catch(err => {\n        console.error('getUserDataCallout : ',err);\n    });\n};\n\nexport const getUserGeneralTasksCallout = (user_id) => {\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.getUserGeneralTasks,{\n        method : 'POST',\n        body : JSON.stringify({\n            user_id\n        })\n    }).then(res => res.json())\n    .catch(err => {\n        console.error('getUserGeneralTasksCallout : ',err);\n    });\n};\n\nexport const createListCallout = (user_id,list_name,list_detail) => {\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.createList,{\n        method : 'POST',\n        body : JSON.stringify({\n            user_id,\n            list_name,\n            list_detail\n        })\n    }).then(res => res.json())\n    .catch(err => {\n        console.error('createListCallout : ',err);\n    });\n};\n\nexport const updateListCallout = (user_id,list_id,list_name,list_detail) => {\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.updateList,{\n        method : 'POST',\n        body : JSON.stringify({\n            user_id,\n            list_id,\n            list_name,\n            list_detail\n        })\n    }).then(res => res.json())\n    .catch(err => {\n        console.error('updateListCallout : ',err);\n    });\n};\n\nexport const deleteListCallout = (user_id,list_id) => {\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.deleteList,{\n        method : 'POST',\n        body : JSON.stringify({\n            user_id,\n            list_id\n        })\n    }).then(res => res.json())\n    .catch(err => {\n        console.error('deleteListCallout : ',err);\n    });\n};\n\nexport const createTaskCallout = (user_id,task_name,task_detail,list_task_root_id) => {\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.createTask,{\n        method : 'POST',\n        body : JSON.stringify({\n            user_id,\n            task_name,\n            task_detail,\n            list_task_root_id\n        })\n    }).then(res => res.json())\n    .catch(err => {\n        console.error('createTaskCallout : ',err);\n    });\n};\n\nexport const updateTaskCallout = (user_id,task_id,task_name,task_detail) => {\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.updateTask,{\n        method : 'POST',\n        body : JSON.stringify({\n            user_id,\n            task_id,\n            task_name,\n            task_detail\n        })\n    }).then(res => res.json())\n    .catch(err => {\n        console.error('updateTaskCallout : ',err);\n    });\n};\n\nexport const deleteTaskCallout = (user_id,task_id) => {\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.deleteTask,{\n        method : 'POST',\n        body : JSON.stringify({\n            user_id,\n            task_id\n        })\n    }).then(res => res.json())\n    .catch(err => {\n        console.error('deleteTaskCallout : ',err);\n    });\n};\n\nexport const createGeneralTaskCallout = (user_id,task_name,task_detail) => {\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.createGeneralTask,{\n        method : 'POST',\n        body : JSON.stringify({\n            user_id,\n            task_name,\n            task_detail\n        })\n    }).then(res => res.json())\n    .catch(err => {\n        console.error('createTaskCallout : ',err);\n    });\n};\n\nexport const updateGeneralTaskCallout = (user_id,task_id,task_name,task_detail) => {\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.updateGeneralTask,{\n        method : 'POST',\n        body : JSON.stringify({\n            user_id,\n            task_id,\n            task_name,\n            task_detail\n        })\n    }).then(res => res.json())\n    .catch(err => {\n        console.error('updateGeneralTaskCallout : ',err);\n    });\n};\n\nexport const deleteGeneralTaskCallout = (user_id,task_id) => {\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.deleteGeneralTask,{\n        method : 'POST',\n        body : JSON.stringify({\n            user_id,\n            task_id\n        })\n    }).then(res => res.json())\n    .catch(err => {\n        console.error('deleteGeneralTaskCallout : ',err);\n    });\n};\n\nexport const deleteGeneralBulkTaskCallout = (user_id,task_ids) => {\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.deleteBulkGeneralTask,{\n        method : 'POST',\n        body : JSON.stringify({\n            user_id,\n            task_ids\n        })\n    }).then(res => res.json())\n    .catch(err => {\n        console.error('deleteGeneralBulkTaskCallout : ',err);\n    });\n};\n\nexport const createComponentCallout = (user_id,component_name,component_detail,list_component_root_id) => {\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.createComponent,{\n        method : 'POST',\n        body : JSON.stringify({\n            user_id,\n            component_name,\n            component_detail,\n            list_component_root_id\n        })\n    }).then(res => res.json())\n    .catch(err => {\n        console.error('createComponentCallout : ',err);\n    });\n};\n\nexport const updateComponentCallout = (user_id,component_id,component_name,component_detail) => {\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.updateComponent,{\n        method : 'POST',\n        body : JSON.stringify({\n            user_id,\n            component_id,\n            component_name,\n            component_detail\n        })\n    }).then(res => res.json())\n    .catch(err => {\n        console.error('updateComponentCallout : ',err);\n    });\n};\n\nexport const deleteComponentCallout = (user_id,component_id) => {\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.deleteComponent,{\n        method : 'POST',\n        body : JSON.stringify({\n            user_id,\n            component_id\n        })\n    }).then(res => res.json())\n    .catch(err => {\n        console.error('deleteComponentCallout : ',err);\n    });\n};\n\n\nexport const exportListComponentsCallout = (user_id,file_name,data) => {\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.exportListComponents,{\n        method : 'POST',\n        body : JSON.stringify({\n            user_id,\n            file_name,\n            data\n        })\n    }).then(res => res.blob())\n    .catch(err => {\n        console.error('exportListComponentsCallout : ',err);\n    });\n};\n\n\n\n\n","<script>\n\n    import Button from \"../utility/Button.svelte\";\n    import { fireEvent,EVENTS } from \"../EventManager\";\n    \n    export let header;\n    export let OnSave;\n    export let showSave = true;\n    export let showActions = true;\n    export let saveLabel = \"Save\";\n    export let _popup_name;\n\n    const fireClosePopupEvent = () => {\n        fireEvent(EVENTS.CLOSE_POPUP,_popup_name);\n    }\n    \n    export let OnClose = fireClosePopupEvent;\n\n</script>\n<div class=\"modal-backdrop fixed\"></div>\n<div class=\"modal-container fixed flex justify-center align-center bg-transparent\">\n    <div class=\"modal\">\n        <header class=\"modal-header flex justify-space-between\">\n            <h3>{header}</h3>\n            <svg on:click={OnClose} xmlns=\"http://www.w3.org/2000/svg\" width=\"21px\" height=\"21px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"pointer\">\n                <line data-v-6b93e4ba=\"\" x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                <line data-v-6b93e4ba=\"\" x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n            </svg>\n        </header>\n        <div class=\"modal-body\">\n            <slot/>\n        </div>\n        {#if showActions}\n            <footer class=\"modal-footer flex flex-end align-center\">\n                {#if showSave}\n                    <Button onClick={OnSave} label={saveLabel} type=\"primary\"/>\n                {/if}\n            </footer>    \n        {/if}\n    </div>\n</div>\n\n<style>\n\n    .modal-backdrop{\n        height: 100vh;\n        width: 100vw;\n        left: 0;\n        top: 0;\n        background: #242a38;\n        opacity: .75;\n        z-index: 3;\n    }\n\n    .modal-container{\n        height: 100vh;\n        width: 100vw;\n        left: 0;\n        top: 0;\n        z-index: 5;\n    }\n\n    .modal{\n        width: 40vw;\n        height: auto;\n        background-color: var(--secondary-color);\n        z-index: 9;\n    }\n\n    .modal-header{\n        background-color: var(--quaternary-color);\n        padding: 1rem;\n        color: var(--text-secondary-color);\n    }\n\n    .modal-header > h3{\n        font-size: 1.07rem;\n        margin: 0;\n    }\n\n    .modal-body{\n        padding: 1.5rem;\n    }\n\n    .modal-footer{\n        padding: 1rem;\n        border-top:  1px solid rgba(34,41,47,.05);\n        background-color: var(--secondary-color);\n        border-color: var(--border-secondary-color);\n    }\n\n</style>\n","<script>\n    export let type;\n    export let selected = true;\n    export let OnClick\n</script>\n\n<span class=\"icon flex justify-center align-center pointer {selected ? type  :''}\" on:click={OnClick}>\n    <slot />\n</span>\n\n<style>\n\n    .icon{\n        padding: .3rem;\n        color: white;\n        border-radius: 4px;\n    }\n\n    .primary{\n        background-color: var(--btn-primary-color);\n    }\n\n    .danger{\n        background-color: var(--danger-color);\n    }\n    \n    .warning{\n        background-color: var(--warning-color);\n    }\n\n    .shaded-white{\n        padding: 0.7rem;\n        background-color: #f8f8f830;\n    }\n\n</style>\n\n","<script>\n    import { EVENTS , fireEvent } from \"./EventManager\";\n\n    import Icon from \"./utility/Icon.svelte\";\n\n    export let lists = [];\n    export let selected_list_id;\n\n    const sendSelectListEvent = (evt) => {\n        fireEvent(EVENTS.SELECT_LIST,evt.currentTarget.dataset.id);\n    } \n\n    const sendNewListEvent = (evt) => {\n        fireEvent(EVENTS.OPEN_NEW_LIST_POPUP,evt.currentTarget.dataset.id);\n    }\n\n</script>\n\n<main>\n    <div class=\"sidebar fixed\">\n        <!-- <div class=\"header\">\n            <div class=\"flex align-center justify-space-between logo-container text-center\">\n                <img class=\"logo\" src=\"./sidebar-logo.svg\" alt=\"onelist\"/>\n                <div class=\"action-container text-center\">\n                </div>\n            </div>\n        </div> -->\n        <div class=\"content\">\n            <ul class=\"list-container\">\n                <li class=\"flex align-center justify-end list-actions border-box relative\">\n                    <div role=\"alert\" aria-live=\"polite\" aria-atomic=\"true\" class=\"alert alert-success pointer\" data-v-aa799a9e=\"\" on:click={sendNewListEvent}>\n                        <div class=\"flex align-center justify-center alert-body box-border\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-plus\">\n                                <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                            </svg>\n                            <span>New User Story</span>\n                        </div>\n                    </div>\n                    <!-- <Icon type=\"primary\" OnClick={sendNewListEvent}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-plus\">\n                            <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                        </svg>\n                    </Icon> -->\n                </li>\n                {#if lists && lists.length}\n                    {#each lists as list}\n                        <li class=\"flex align-center pointer justify-start list-item border-box relative\" data-id={list.list_id} on:click={sendSelectListEvent}>\n                            <span class=\"item-content flex align-center border-box { selected_list_id == list.list_id ? 'active' : ''}\"> \n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"list-logo align-center feather feather-file-text\">\n                                    <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\n                                    <polyline points=\"14 2 14 8 20 8\"></polyline>\n                                    <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line>\n                                    <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line>\n                                    <polyline points=\"10 9 9 9 8 9\"></polyline>\n                                </svg>\n                                <span class=\"align-center item-name\"> {list.list_name} </span>\n                            </span>\n                        </li>\n                    {/each}\n                {/if}\n                \n            </ul>\n        </div>\n    </div>\n</main>\n\n<style>\n\n    .sidebar{\n        width: 20vw;\n        background-color: var(--secondary-color);\n        height: 100%;\n        z-index: 1;\n        left: 0;\n        margin-left: 5.25rem;\n        box-shadow: 0 0 15px 0 rgb(34 41 47 / 5%);\n    }\n\n    .list-actions{\n        padding: 0;\n    }\n\n    .sidebar .content{\n        height: calc(100% - 2.45rem);\n    }\n\n    .sidebar .list-container{\n       padding: 0;\n       list-style: none;\n    }\n\n    .list-item{\n        white-space : nowrap;\n        color: var(--text-secondary-color);\n        line-height: 1.45;\n        padding: 0.25rem 0;\n    }\n\n    .list-item .item-content{\n        padding: 10px 15px 10px 15px;\n        margin: 0 15px;\n        width: 100%;\n        border-radius: 5px;\n        overflow: hidden;\n    }\n\n    .item-name{\n        overflow: hidden;\n        text-overflow: ellipsis;\n        width: 90%;\n    }\n\n    .list-logo{\n        margin-right: 8px;\n    }\n\n    .item-content:hover{\n        background-color: var(--quaternary-color);\n    }\n\n    .item-content.active{\n        background : var(--primary-color);\n    }\n\n    ul{\n        margin: 0;\n    }\n\n    .alert{\n        border: none;\n        padding: 0;\n        width: 100%;\n        text-align: center;\n    }\n\n    .alert-primary{\n        background-color: rgba(115,103,240,.12);\n        color : var(--primary-color);\n    }\n\n    .alert-success{\n        background-color: #28c76f20;\n        color : #28c76f;\n    }\n\n    .alert-body{\n        padding: .71rem 1rem;\n    }\n\n\n</style>","<script>\n\n    import { fireEvent, EVENTS } from \"./EventManager\";\n    import { TASK_STATUS ,getStatusClass } from \"./constants\";\n    import Input from \"./utility/Input.svelte\";\n    import Icon from \"./utility/Icon.svelte\";\n    \n    export let task;\n    export let actions = [];\n    export let allowSelection = false;\n\n    let isSelected = false;\n\n    const sendOpenTaskDetailEvent = () => {\n        fireEvent(EVENTS.OPEN_EDIT_TASK_POPUP,task.task_id);\n    }\n\n    const sendDeleteTaskDetailEvent = () => {\n        fireEvent(EVENTS.DELETE_TASK,task.task_id);\n    }\n\n    const sendViewTaskDetailEvent = () => {\n        fireEvent(EVENTS.OPEN_VIEW_TASK_POPUP,task.task_id);\n    }\n\n    const onSelect = (evt) => {\n        isSelected = evt.target.checked;\n        fireEvent(EVENTS.SELECT_TASK,{\n            task_id : task.task_id,\n            isSelected\n        });\n    }\n    \n</script>\n\n<li class=\"columns flex justify-space-between align-center border-box {isSelected ? 'selected' : ''}\">\n    \n    <span class=\"column flex justify-center border-box text-bold pointer task_name justify-start align-center\">\n        {#if allowSelection}\n            <div class=\"custom-checkbox-container {isSelected ? 'show' : ''}\">\n                <input type=\"checkbox\" class=\"custom-control-input\" id=\"_{task.task_id}\" checked={isSelected} on:change={onSelect}>\n                <label class=\"custom-control-label\" for=\"_{task.task_id}\"></label>\n            </div>\n        {/if}\n        \n        <Input label=\"Name\" width_class=\"width-full\" type=\"text\" classes=\"bg-transparent\" value={task.task_name} data_field=\"task_name\" readOnly/>\n        \n        <span class=\"row-actions\">\n            {#if actions.includes('EDIT')}\n                <Icon type=\"warning\" OnClick={sendOpenTaskDetailEvent}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"mr-75 feather feather-edit-2\">\n                        <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\"></path>\n                    </svg>\n                </Icon>\n                &nbsp;&nbsp;\n            {/if}\n            {#if actions.includes('DELETE')}\n                <Icon type=\"danger\" OnClick={sendDeleteTaskDetailEvent}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"mr-75 feather feather-trash\">\n                        <polyline points=\"3 6 5 6 21 6\"></polyline>\n                        <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n                    </svg>\n                </Icon>\n                &nbsp;&nbsp;\n            {/if}\n            {#if actions.includes('VIEW')}\n                <Icon type=\"warning\" OnClick={sendViewTaskDetailEvent}>\n                    <svg data-v-9a6e255c=\"\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" id=\"invoice-row-5036-preview-icon\" class=\"mx-1 feather feather-eye\" style=\"\">\n                        <path data-v-9a6e255c=\"\" d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\n                        <circle data-v-9a6e255c=\"\" cx=\"12\" cy=\"12\" r=\"3\"></circle>\n                    </svg>\n                </Icon>\n                &nbsp;&nbsp;\n            {/if}\n            \n            \n        </span>\n    </span>\n    <span class=\"column flex justify-center border-box text-bold pointer task_start_date justify-center align-center\">\n        <Input  label=\"Start Date\" width_class=\"width-full\" type=\"text\" classes=\"bg-transparent text-center\" value={task.task_start_date} data_field=\"task_start_date\" readOnly/>\n    </span>\n    <span class=\"column flex justify-center border-box text-bold pointer task_end_date justify-center align-center\">\n        <Input  label=\"End Date\" width_class=\"width-full\" type=\"text\" classes=\"bg-transparent text-center\" value={task.task_end_date} data_field=\"task_end_date\" readOnly/>\n    </span>\n    <span class=\"column flex justify-center border-box text-bold pointer task_status justify-center align-stretch\">\n        <Input  label=\"Status\" width_class=\"width-full\" type=\"select\" classes={getStatusClass(task.task_status)} value={task.task_status} data_field=\"task_status\" options={TASK_STATUS} readOnly/>\n    </span>\n            \n</li>\n\n<style>\n\n    .columns{\n        width: 100%;\n        list-style: none;\n        background-color: var(--secondary-color);\n        margin-bottom: 4px;\n        color: var(--secondary-color);\n        padding-left: 1rem;\n        box-shadow: 0 4px 24px 0 rgb(34 41 47 / 24%);\n        border-radius: 4px;\n    }\n\n    .column{\n        height: 40px;\n    }\n\n    .row-actions{\n        padding: 0 1rem;\n        display: none;\n    }\n\n    li.columns:hover .row-actions{\n        display: inherit;\n    }\n\n    li.columns:hover .custom-checkbox-container{\n        display: inherit;\n    }\n\n    .custom-checkbox-container.show{\n        display: inherit !important;\n    }\n\n    .columns.selected{\n        background-color: #7367f01f !important;\n        border : 2px solid var(--primary-color) !important;\n    }\n\n    .custom-checkbox-container{\n        position: relative;\n        z-index: 1;\n        display: none;\n        min-height: 1.45rem;\n        cursor: pointer;\n        margin-right: 1.5rem;\n    }\n\n    .custom-control-input{\n        width: 1.285rem;\n        height: 1.285rem;\n        left: 0;\n        box-sizing: border-box;\n        margin: 0;\n        position: absolute;\n        z-index: -1;\n        opacity: 0;\n    }\n\n    .custom-control-label{\n        font-size: 1rem;\n        position: static;\n        color: #d0d2d6;\n        margin-bottom: 0;\n        vertical-align: top;\n    }\n\n    .custom-control-label:before {\n        background-color: #283046;\n        border-color: #404656;\n        left: 0;\n        border-radius: 3px;\n        width: 18px;\n        height: 18px;\n        top: 0.07rem;\n        border: 1px solid #d8d6de;\n        position: absolute;\n        display: block;\n        pointer-events: none;\n        content: \"\";\n    }\n\n    .custom-control-label:after{\n        left: 0;\n        background-size: 57%;\n        width: 18px;\n        height: 18px;\n        top: 0.07rem;\n        background: no-repeat 50%/50% 50%;\n        position: absolute;\n        display: block;\n        content: \"\";\n    }\n    \n    .custom-control-input:checked~.custom-control-label:before{\n        box-shadow: 0 2px 4px 0 rgba(115,103,240,.4)!important;\n        border-color: #7367f0 !important;\n        background-color: #7367f0 !important;\n    }\n\n    .custom-control-input:checked~.custom-control-label:after {\n        background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 9.5 7.5'%3E%3Cpolyline points='0.75 4.35 4.18 6.75 8.75 0.75' style='fill:none;stroke:%23fff;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5px'/%3E%3C/svg%3E\");\n    }\n\n</style>","<script>\n\n    import { fireEvent, EVENTS } from \"./EventManager\";\n    import { COMPONENT_TYPE_LIST , COMPONENT_COLUMN ,getComponentTypeClass } from \"./constants\";\n    import Input from \"./utility/Input.svelte\";\n    import Icon from \"./utility/Icon.svelte\";\n    export let component;\n    export let actions = [];\n\n    const sendOpenComponentDetailEvent = () => {\n        fireEvent(EVENTS.OPEN_EDIT_COMPONENT_POPUP,component.component_id);\n    }\n\n    const sendDeleteComponentDetailEvent = () => {\n        fireEvent(EVENTS.DELETE_COMPONENET,component.component_id);\n    }\n    \n    const sendViewComponentDetailEvent = () => {\n        fireEvent(EVENTS.OPEN_VIEW_COMPONENT_POPUP,component.component_id);\n    }\n\n</script>\n\n<li class=\"columns flex justify-space-between align-center border-box\">\n\n    <span class=\"column flex grow justify-center border-box text-bold pointer component_name justify-start align-center\">\n        <Input label=\"Name\"  width_class=\"width-full\" type=\"text\" classes=\"bg-transparent\" value={component.component_name} data_field=\"component_name\" readOnly/>\n        <span class=\"row-actions\">\n            {#if actions.includes('EDIT')}\n                <Icon type=\"warning\" OnClick={sendOpenComponentDetailEvent}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"mr-75 feather feather-edit-2\">\n                        <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\"></path>\n                    </svg>\n                </Icon>\n                &nbsp;&nbsp;\n            {/if}\n            {#if actions.includes('DELETE')}\n                <Icon type=\"danger\" OnClick={sendDeleteComponentDetailEvent}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"mr-75 feather feather-trash\">\n                        <polyline points=\"3 6 5 6 21 6\"></polyline>\n                        <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n                    </svg>\n                </Icon>\n            {/if}\n            {#if actions.includes('VIEW')}\n                <Icon type=\"warning\" OnClick={sendViewComponentDetailEvent}>\n                    <svg data-v-9a6e255c=\"\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" id=\"invoice-row-5036-preview-icon\" class=\"mx-1 feather feather-eye\" style=\"\">\n                        <path data-v-9a6e255c=\"\" d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\n                        <circle data-v-9a6e255c=\"\" cx=\"12\" cy=\"12\" r=\"3\"></circle>\n                    </svg>\n                </Icon>\n                &nbsp;&nbsp;\n            {/if}\n            \n        </span>\n\n    </span>\n    <span class=\"column flex grow justify-center border-box text-bold pointer component_version  justify-center align-center\">\n        <Input label=\"Version\" width_class=\"width-full\" type=\"text\" classes=\"bg-transparent text-center\" value={component.component_version} data_field=\"component_version\" readOnly/>\n    </span>\n    <span class=\"column flex grow justify-center border-box text-bold pointer component_date  justify-center align-center\">\n        <Input label=\"Version\" width_class=\"width-full\" type=\"text\" classes=\"bg-transparent text-center\" value={component.component_date} data_field=\"component_version\" readOnly/>\n    </span>\n    <span class=\"column flex grow justify-center border-box text-bold pointer component_parent_name  justify-center align-center\">\n        <Input label=\"Parent Component (if any)\" width_class=\"width-full\" type=\"text\" classes=\"bg-transparent text-center\" value={component.component_parent_name} data_field=\"component_parent_name\" readOnly/>\n    </span>\n    <span class=\"column flex grow justify-center border-box text-bold pointer component_type justify-center align-stretch\">\n        <Input label=\"Type\" width_class=\"width-full\" type=\"select\" classes=\"bg-transparent text-center Component-Type {getComponentTypeClass(component.component_type)}\" value={component.component_type} data_field=\"component_type\" options={COMPONENT_TYPE_LIST} readOnly/>\n    </span>\n         \n</li>\n\n<style>\n\n    .columns{\n        width: 100%;\n        list-style: none;\n        background-color: var(--secondary-color);\n        margin-bottom: 4px;\n        color: var(--text-secondary-color);\n        padding-left: 1rem;\n        box-shadow: 0 4px 24px 0 rgb(34 41 47 / 24%);\n        border-radius: 4px;\n    }\n\n    .column{\n        height: 40px;\n    }\n\n    .row-actions{\n        padding: 0 1rem;\n        display: none;\n    }\n\n    li.columns:hover .row-actions{\n        display: inherit;\n    }\n\n\n</style>","<script>\n    import { TASK_COLUMN , COMPONENT_COLUMN , getBulletClass} from \"./constants\";\n    import { EVENTS , fireEvent } from \"./EventManager\";\n    import { AUTH } from \"./firebase\";\n    import Task from \"./Task.svelte\";\n    import Component from \"./Component.svelte\";\n    import { exportListComponentsCallout } from \"./api\";\n    import Icon from \"./utility/Icon.svelte\";\n    \n    export let selected_list;\n\n    const handleListChange = (e) => {\n        selected_list[e.target.dataset.field] = e.target.value;\n    }\n\n    const sendNewTaskEvent = () => {\n        fireEvent(EVENTS.OPEN_NEW_TASK_POPUP,{});\n    }\n\n    const sendNewComponentEvent = () => {\n        fireEvent(EVENTS.OPEN_NEW_COMPONENT_POPUP,{});\n    }\n\n    const sendEditListEvent = () => {\n        fireEvent(EVENTS.OPEN_EDIT_LIST_POPUP,{});\n    }\n\n    const sendDeleteListEvent = () => {\n        console.log('processDeleteList Fired');\n        fireEvent(EVENTS.DELETE_LIST,{});\n    }\n\n    const exportComponents = () => {\n        const data = JSON.stringify(selected_list.list_components);\n        const file_name = selected_list.list_name + ' Components';\n        fireEvent(EVENTS.SHOW_SPINNER,{});\n        exportListComponentsCallout(\n            AUTH.currentUser.uid,\n            file_name,\n            data  \n        ).then(res => {\n            const exportURL = URL.createObjectURL(res);\n            const aTag = document.createElement(\"a\");\n            document.body.appendChild(aTag);\n            aTag.style = \"display: none\";\n            aTag.href = exportURL;\n            aTag.download = file_name+'.csv';\n            aTag.click();\n            window.URL.revokeObjectURL(exportURL);\n            document.body.removeChild(aTag);\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n        }) \n        .catch(err => {\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n            console.error(err);\n        });\n    }\n\n</script>\n\n<main>\n    <div class=\"detail-container border-box\">\n        <div class=\"flex justify-space-between list-header border-box align-center\">\n            <div class=\"flex list-dates grow align-center\">\n                <span class=\"bullet {getBulletClass(selected_list.list_status)}\"></span>\n                <span class=\"column flex justify-start border-box text-bold pointer list_name align-center\">\n                    <span class=\"list_name\">{selected_list.list_name}</span>\n                </span>\n            </div>\n            <div class=\"flex\">\n                <Icon type=\"warning\" OnClick={sendEditListEvent}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"mr-75 feather feather-edit-2\">\n                        <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\"></path>\n                    </svg>\n                </Icon>\n                &nbsp;&nbsp;\n                <Icon type=\"danger\" OnClick={sendDeleteListEvent}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"mr-75 feather feather-trash\">\n                        <polyline points=\"3 6 5 6 21 6\"></polyline>\n                        <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n                    </svg>\n                </Icon>\n            </div>\n        </div>\n        <div class=\"task-header flex align-center justify-space-between\">\n            <div class=\"flex align-center\">\n                <svg data-v-1134b199=\"\" xmlns=\"http://www.w3.org/2000/svg\" width=\"21px\" height=\"21px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon\">\n                    <polyline data-v-1134b199=\"\" points=\"9 11 12 14 22 4\"></polyline>\n                    <path data-v-1134b199=\"\" d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"></path>\n                </svg>\n                <span class=\"task-title\"> Tasks </span>\n            </div>\n            <Icon type=\"primary\" OnClick={sendNewTaskEvent}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-plus\">\n                    <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                </svg>\n            </Icon>\n        </div>\n\n        {#if selected_list.list_tasks && selected_list.list_tasks.length}\n            <div class=\"task-container flex justify-start align-center grow flex-column\">\n                <li class=\"columns flex justify-end align-center text-white text-bold\">\n                    <div class=\"flex justify-center aggregator-container\">\n                        <span class=\"flex align-center justify-center badge grow badge-not-started\">{selected_list.list_tasks.filter(task => task.task_status === \"Not Started\").length}</span>\n                        <span class=\"flex align-center justify-center badge grow badge-in-progress\">{selected_list.list_tasks.filter(task => task.task_status === \"In Progress\").length}</span>\n                        <span class=\"flex align-center justify-center badge grow badge-completed\">{selected_list.list_tasks.filter(task => task.task_status === \"Completed\").length}</span>\n                    </div>\n                </li>\n                <li class=\"columns flex justify-space-between align-center text-white text-bold\">\n                    {#each TASK_COLUMN as column}\n                        {#if column.show_in_list}\n                            <span class=\"column flex justify-center grow border-box text-bold {column.key}\">{ column.show_header ? column.label : ''}</span>    \n                        {/if}\n                    {/each}\n                </li>\n                {#each selected_list.list_tasks as task}\n                    <Task {task} actions={['EDIT','DELETE']}/>    \n                {/each}\n            </div>\n            {:else}\n            <div role=\"alert\" aria-live=\"polite\" aria-atomic=\"true\" class=\"alert alert-primary\" data-v-aa799a9e=\"\">\n                <div class=\"alert-body box-border\">\n                    <span>No Tasks.</span>\n                </div>\n            </div>\n        {/if}\n        <div class=\"task-header flex align-center justify-space-between\">\n            <div class=\"flex align-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25px\" height=\"25px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon\">\n                    <path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path>\n                    <polyline points=\"13 2 13 9 20 9\"></polyline>\n                </svg>\n                <span class=\"task-title\"> Components </span>\n            </div>\n            <div class=\"flex align-center\">\n                {#if selected_list.list_components && selected_list.list_components.length}\n                    <Icon type=\"danger\" OnClick={exportComponents}>\n                        <svg data-v-9a6e255c=\"\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-download\">\n                            <path data-v-9a6e255c=\"\" d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path><polyline data-v-9a6e255c=\"\" points=\"7 10 12 15 17 10\"></polyline><line data-v-9a6e255c=\"\" x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\n                        </svg>\n                    </Icon>&nbsp;&nbsp;\n                {/if}\n                <Icon type=\"primary\" OnClick={sendNewComponentEvent}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-plus\">\n                        <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                    </svg>\n                </Icon>\n            </div>\n            \n        </div>\n\n        {#if selected_list.list_components && selected_list.list_components.length}\n            <div class=\"task-container flex justify-start align-center grow flex-column\">\n                <li class=\"columns flex justify-space-between align-center text-white text-bold\">\n                    {#each COMPONENT_COLUMN as column}\n                        {#if column.show_in_list}\n                            <span class=\"column flex grow justify-center grow border-box text-bold {column.key}\">{ column.show_header ? column.label : ''}</span>    \n                        {/if}\n                    {/each}\n                </li>\n                {#each selected_list.list_components as component}\n                    <Component {component} actions={['EDIT','DELETE']}/>    \n                {/each}\n            </div>\n            {:else}\n            <div role=\"alert\" aria-live=\"polite\" aria-atomic=\"true\" class=\"alert alert-primary\" data-v-aa799a9e=\"\">\n                <div class=\"alert-body box-border\">\n                    <span>No Components.</span>\n                </div>\n            </div>\n        {/if}\n    </div>\n</main>\n\n<style>\n\n    .detail-container{\n        margin-left: calc(20vw + 5.25rem);\n        height: 100vh;\n        width: calc(100vw - (20vw + 5.25rem));\n        padding: 1rem;\n    }\n\n    .list-header{\n        padding: 0.5rem 0;\n        box-shadow: 0 4px 24px 0 rgb(34 41 47 / 10%);\n    }\n\n    .task-header{\n        border-bottom: 1px solid var(--border-tertiary-color);\n        margin-bottom: 4px;\n        padding: 8px 0;\n    }\n\n    .list_name{\n        font-size: 2rem;\n        color: white;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    .task-title{\n        font-size: 1.5rem;\n        color: var(--primary-color);\n    }\n\n    .list-status{\n       height: 40px;\n       padding: 0.25rem 1.25rem;\n    }\n\n    .columns{\n        width: 100%;\n        list-style: none;\n    }\n\n    .column{\n        padding: 0.5rem;\n        width: 95%;\n    }\n\n    .task_name{\n        width: 55%;\n    }\n\n    .task_start_date,.task_end_date{\n        width: 15%;\n    }\n\n    .task_status,.aggregator-container{\n        width: 15%;\n    }\n\n    .aggregator-container{\n        height: 40px;\n    }\n\n    .column:first-of-type{\n        border-left: 0;\n    }\n\n    .column:last-of-type{\n        border-right: 0;\n    }\n\n    .action-container{\n        width: 10%;\n    }\n\n    .task-container{\n        width: 100%;\n    }\n    \n    .task-note{\n        width: 100%;\n    }\n\n    .list-start-date{\n        margin-right: 5px;\n    }\n\n    .list-end-date{\n        margin-left: 5px;\n    }\n\n    .icon{\n        color: var(--primary-color);\n        font-weight: 400;\n    }\n\n    .task-header .icon{\n        margin-right : 5px;\n    }\n\n    .alert{\n        background-color: rgba(115,103,240,.12);\n        border: none;\n        padding: 0;\n        border-radius: 0.3rem;\n        color : var(--primary-color);;\n    }\n\n    .alert-body{\n        padding: .71rem 1rem;\n    }\n\n    .bullet{\n        width: .714rem;\n        height: .714rem;\n        border-radius: 50%;\n    }\n\n    .list-dates{\n        width: 90%;\n    }\n\n</style>","<script>\n    import { onMount , onDestroy} from \"svelte\";\n    import {getUserDataCallout , createListCallout, updateListCallout ,deleteListCallout , createTaskCallout , updateTaskCallout , deleteTaskCallout , createComponentCallout , updateComponentCallout , deleteComponentCallout } from '../api';\n    import { AUTH } from \"../firebase\";\n    import Input from \"../utility/Input.svelte\";\n    import Popup from \"../utility/Popup.svelte\";\n    import {registerListener , unregisterListener, EVENTS, fireEvent} from '../EventManager';\n    import Sidebar from \"../Sidebar.svelte\";\n    import Container from \"../Container.svelte\";\n    import { LIST_STATUS, getStatusClass,getComponentTypeClass, TASK_STATUS , COMPONENT_TYPE_LIST , DEFAULTS} from \"../constants\";\n\n    let store = [];\n    let lists = [];\n    const POPUP = {\n        NEW_LIST : false,\n        EDIT_LIST : false,\n        NEW_TASK : false,\n        EDIT_TASK : false,\n        NEW_COMPONENT : false,\n        EDIT_COMPONENT : false\n    }\n\n    const processClosePopup = (_popup) => {\n        if(_popup == 'EDIT_LIST'){\n            selected_list = JSON.parse(JSON.stringify(backup_selected_list));\n        }\n        POPUP[_popup] = false; \n    }\n    \n    let selected_list;\n    let backup_selected_list;\n\n    let new_list = {\n        list_name : \"\",\n        list_start_date : \"\",\n        list_end_date : \"\",\n        list_status : DEFAULTS.LIST_STATUS,\n        list_description : \"\"\n    };\n\n    let list_fields = {\n        list_name : true,\n        list_start_date : true,\n        list_end_date : true\n    }\n\n    const handleNewListChange = (e) => {\n        new_list[e.target.dataset.field] = e.target.value;\n    }\n\n    const handleExistingListChange = (e) => {\n        selected_list[e.target.dataset.field] = e.target.value;\n    }\n\n    const processOpenNewListPopup = () => {\n        list_fields = {\n            list_name : true,\n            list_start_date : true,\n            list_end_date : true\n        }\n        POPUP.NEW_LIST = true;\n    }\n\n    const processSelectListEvent = (list_id) => {\n        list_fields = {\n            list_name : true,\n            list_start_date : true,\n            list_end_date : true\n        }\n        selected_list = store.filter(list => list.list_id == list_id)[0];\n    }\n\n    const processEditListPopup = () => {\n        backup_selected_list = JSON.parse(JSON.stringify(selected_list));\n        POPUP.EDIT_LIST = true;\n    }\n\n    const saveNewList = () => {\n        if(!new_list.list_name){\n            list_fields.list_name = false;\n            return;\n        }else{\n            list_fields.list_name = true;\n        }\n        \n\n        if(new_list.list_status === \"In Progress\"){\n            if(!new_list.list_start_date){\n                list_fields.list_start_date = false;\n                return;\n            }else{\n                list_fields.list_start_date = true;\n            }\n        }\n\n        if(new_list.list_status === \"Completed\"){\n            if(!new_list.list_start_date){\n                list_fields.list_start_date = false;\n                return;\n            }else{\n                list_fields.list_start_date = true;\n            }\n            if(!new_list.list_end_date){\n                list_fields.list_end_date = false;\n                return;\n            }else{\n                list_fields.list_end_date = true;\n            }\n        }\n\n        if(new_list.list_start_date && new_list.list_end_date){\n            let start_date = new Date(new_list.list_start_date);\n            let end_date = new Date(new_list.list_end_date);\n            if(end_date - start_date < 0){\n                list_fields.list_end_date = false;\n                list_fields.list_start_date = false;\n                return;\n            }else{\n                list_fields.list_end_date = true;\n                list_fields.list_start_date = true;\n            }\n        }\n\n        \n        fireEvent(EVENTS.SHOW_SPINNER,{});\n        createListCallout(\n            AUTH.currentUser.uid,\n            new_list.list_name,\n            JSON.stringify({\n                description : new_list.list_description,\n                status : new_list.list_status,\n                start_date : new_list.list_start_date,\n                end_date : new_list.list_end_date\n            })\n        )\n        .then(res => {\n            store.push({\n                list_id:res.list_id,\n                list_name : res.list_name,\n                list_start_date : res.list_start_date,\n                list_end_date : res.list_end_date,\n                list_description : res.list_description,\n                list_status : res.list_status,\n                list_task_root_id : res.list_task_root_id,\n                list_component_root_id : res.list_component_root_id,\n                list_tasks : [],\n                list_components : []\n            });\n            lists.push({\n                list_id : res.list_id,\n                list_name : res.list_name\n            });\n            new_list = {\n                list_name : \"\",\n                list_start_date : \"\",\n                list_end_date : \"\",\n                list_status : \"Not Started\",\n                list_description : \"\"\n            };\n            store = store;\n            lists = lists;\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n            fireEvent(EVENTS.CLOSE_POPUP,'NEW_LIST');\n        }) \n        .catch(err => {\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n            console.error(err);\n        });\n    }\n\n    const updateList = () => {\n        if(!selected_list.list_name){\n            list_fields.list_name = false;\n            return;\n        }else{\n            list_fields.list_name = true;\n        }\n        \n\n        if(selected_list.list_status === \"In Progress\"){\n            if(!selected_list.list_start_date){\n                list_fields.list_start_date = false;\n                return;\n            }else{\n                list_fields.list_start_date = true;\n            }\n        }\n\n        if(selected_list.list_status === \"Completed\"){\n            if(!selected_list.list_start_date){\n                list_fields.list_start_date = false;\n                return;\n            }else{\n                list_fields.list_start_date = true;\n            }\n            if(!selected_list.list_end_date){\n                list_fields.list_end_date = false;\n                return;\n            }else{\n                list_fields.list_end_date = true;\n            }\n        }\n\n        if(selected_list.list_start_date && selected_list.list_end_date){\n            let start_date = new Date(selected_list.list_start_date);\n            let end_date = new Date(selected_list.list_end_date);\n            if(end_date - start_date < 0){\n                list_fields.list_end_date = false;\n                list_fields.list_start_date = false;\n                return;\n            }else{\n                list_fields.list_end_date = true;\n                list_fields.list_start_date = true;\n            }\n        }\n\n        fireEvent(EVENTS.SHOW_SPINNER,{});\n        updateListCallout(\n            AUTH.currentUser.uid,\n            selected_list.list_id,\n            selected_list.list_name,\n            JSON.stringify({\n                description : selected_list.list_description,\n                status : selected_list.list_status,\n                start_date : selected_list.list_start_date,\n                end_date : selected_list.list_end_date\n            })\n        )\n        .then(res => {\n            for(let i=0;i<lists.length;i++){\n                if(lists[i].list_id === selected_list.list_id){\n                    lists[i].list_name = selected_list.list_name;\n                }\n            }\n            backup_selected_list = JSON.parse(JSON.stringify(selected_list));\n            store = store;\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n            fireEvent(EVENTS.CLOSE_POPUP,'EDIT_LIST');\n        })\n        .catch(err => {\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n        });\n    }\n\n    function processDeleteList () {\n        let sure = window.confirm(`Are you sure you want to delete ${selected_list.list_name} ?`);\n        if(!sure) return;\n        fireEvent(EVENTS.SHOW_SPINNER,{});\n        deleteListCallout(\n            AUTH.currentUser.uid,\n            selected_list.list_id\n        )\n        .then(res => {\n            for(let i=0;i<lists.length;i++){\n                if(lists[i].list_id === selected_list.list_id){\n                    lists.splice(i,1);\n                }\n            }\n            selected_list = null;\n            backup_selected_list = null;\n            store = store;\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n        })\n        .catch(err => {\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n        });\n\n    }\n\n    let selected_task;\n    let backup_selected_task;\n\n    let new_task = {\n        task_name : \"\",\n        task_start_date : \"\",\n        task_end_date : \"\",\n        task_status : DEFAULTS.TASK_STATUS,\n        task_description : \"\"\n    };\n\n    let task_fields = {\n        task_name : true,\n        task_start_date : true,\n        task_end_date : true\n    }\n\n    const handleNewTaskChange = (e) => {\n        new_task[e.target.dataset.field] = e.target.value;\n    }\n\n    const handleExistingTaskChange = (e) => {\n        selected_task[e.target.dataset.field] = e.target.value;\n    }\n\n    const processOpenTaskPopup = () => {\n        task_fields = {\n            task_name : true,\n            task_start_date : true,\n            task_end_date : true\n        }\n        POPUP.NEW_TASK = true;\n    }\n\n    const processEditTaskPopup = (task_id) => {\n        for(let i=0;i<selected_list.list_tasks.length;i++){\n            if(selected_list.list_tasks[i].task_id === task_id){\n                selected_task = JSON.parse(JSON.stringify(selected_list.list_tasks[i]));\n                backup_selected_task = JSON.parse(JSON.stringify(selected_list.list_tasks[i]));\n            }\n        }\n        task_fields = {\n            task_name : true,\n            task_start_date : true,\n            task_end_date : true\n        }\n        POPUP.EDIT_TASK = true;\n    }\n\n    const saveNewTask = () => {\n\n        if(!new_task.task_name){\n            task_fields.task_name = false;\n            return;\n        }else{\n            task_fields.task_name = true;\n        }\n\n        if(new_task.task_status === \"Completed\"){\n            if(!new_task.task_start_date){\n                task_fields.task_start_date = false;\n                return;\n            }else{\n                task_fields.task_start_date = true;\n            }\n            if(!new_task.task_end_date){\n                task_fields.task_end_date = false;\n                return;\n            }else{\n                task_fields.task_end_date = true;\n            }\n        }\n\n        if(new_task.task_status === \"In Progress\"){\n            if(!new_task.task_start_date){\n                task_fields.task_start_date = false;\n                return;\n            }else{\n                task_fields.task_start_date = true;\n            }\n        }\n\n        if(new_task.task_start_date && new_task.task_end_date){\n            let start_date = new Date(new_task.task_start_date);\n            let end_date = new Date(new_task.task_end_date);\n            if(end_date - start_date < 0){\n                task_fields.task_end_date = false;\n                task_fields.task_start_date = false;\n                return;\n            }else{\n                task_fields.task_end_date = true;\n                task_fields.task_start_date = true;\n            }\n        }\n\n        fireEvent(EVENTS.SHOW_SPINNER,{});\n        createTaskCallout(\n            AUTH.currentUser.uid,\n            new_task.task_name,\n            JSON.stringify({\n                description : new_task.task_description,\n                status : new_task.task_status,\n                start_date : new_task.task_start_date,\n                end_date : new_task.task_end_date\n            }),\n            selected_list.list_task_root_id\n        )\n        .then(res => {\n            selected_list.list_tasks.push({\n                task_id:res.task_id,\n                task_name : res.task_name,\n                task_start_date : res.task_start_date,\n                task_end_date : res.task_end_date,\n                task_description : res.task_description,\n                task_status : res.task_status\n            });\n\n            const selected_list_index = store.findIndex(list => list.list_id === selected_list.list_id);\n\n            store.splice(selected_list_index,1,selected_list);\n            new_task = {\n                task_name : \"\",\n                task_start_date : \"\",\n                task_end_date : \"\",\n                task_status : DEFAULTS.TASK_STATUS,\n                task_description : \"\"\n            };\n            selected_list = selected_list;\n            store = store;\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n            fireEvent(EVENTS.CLOSE_POPUP,'NEW_TASK');\n        })\n        .catch(err => {\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n        });\n    }\n\n    const updateTask = () => {\n        \n        if(!selected_task.task_name){\n            task_fields.task_name = false;\n            return;\n        }else{\n            task_fields.task_name = true;\n        }\n\n        if(selected_task.task_status === \"Completed\"){\n            if(!selected_task.task_start_date){\n                task_fields.task_start_date = false;\n                return;\n            }else{\n                task_fields.task_start_date = true;\n            }\n            if(!selected_task.task_end_date){\n                task_fields.task_end_date = false;\n                return;\n            }else{\n                task_fields.task_end_date = true;\n            }\n        }\n\n        if(selected_task.task_status === \"In Progress\"){\n            if(!selected_task.task_start_date){\n                task_fields.task_start_date = false;\n                return;\n            }else{\n                task_fields.task_start_date = true;\n            }\n        }\n\n        if(selected_task.task_start_date && selected_task.task_end_date){\n            let start_date = new Date(selected_task.task_start_date);\n            let end_date = new Date(selected_task.task_end_date);\n            if(end_date - start_date < 0){\n                task_fields.task_end_date = false;\n                task_fields.task_start_date = false;\n                return;\n            }else{\n                task_fields.task_end_date = true;\n                task_fields.task_start_date = true;\n            }\n        }\n        fireEvent(EVENTS.SHOW_SPINNER,{});\n        updateTaskCallout(\n            AUTH.currentUser.uid,\n            selected_task.task_id,\n            selected_task.task_name,\n            JSON.stringify({\n                description : selected_task.task_description,\n                status : selected_task.task_status,\n                start_date : selected_task.task_start_date,\n                end_date : selected_task.task_end_date\n            })\n        )\n        .then(res => {\n            selected_task = selected_task;\n            backup_selected_task = JSON.parse(JSON.stringify(selected_task));\n\n            const selected_task_index = selected_list.list_tasks.findIndex(task => task.task_id === selected_task.task_id);\n            selected_list.list_tasks.splice(selected_task_index,1,selected_task);\n            \n            selected_list = selected_list;\n\n            const selected_list_index = store.findIndex(list => list.list_id === selected_list.list_id);\n            store.splice(selected_list_index,1,selected_list);\n            \n            store = store;\n\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n            fireEvent(EVENTS.CLOSE_POPUP,'EDIT_TASK');\n        })\n        .catch(err => {\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n        });\n    }\n\n    const processDeleteTask = (task_id) => {\n        if(selected_list.list_tasks.filter(task => task.task_id == task_id).length){\n            let sure = window.confirm(`Are you sure you want to delete the task?`);\n            if(!sure) return;\n            fireEvent(EVENTS.SHOW_SPINNER,{});\n            deleteTaskCallout(\n                AUTH.currentUser.uid,\n                task_id\n            )\n            .then(res => {\n                for(let i=0;i<selected_list.list_tasks.length;i++){\n                    if(selected_list.list_tasks[i].task_id === task_id){\n                        selected_list.list_tasks.splice(i,1);\n                    }\n                }\n                selected_list = selected_list;\n                store = store;\n                fireEvent(EVENTS.HIDE_SPINNER,{});\n            })\n            .catch(err => {\n                fireEvent(EVENTS.HIDE_SPINNER,{});\n            });\n        }\n    }\n\n    let selected_component;\n    let backup_selected_component;\n\n    let new_component = {\n        component_name : \"\",\n        component_type : DEFAULTS.COMPONENT_TYPE,\n        component_version : \"\",\n        component_parent_name : \"\",\n        component_date : \"\"\n    };\n\n    let component_fields = {\n        component_name : true,\n        component_date : true,\n        component_version : true\n    }\n\n    const handleNewComponentChange = (e) => {\n        new_component[e.target.dataset.field] = e.target.value;\n    }\n\n    const handleExistingComponentChange = (e) => {\n        selected_component[e.target.dataset.field] = e.target.value;\n    }\n\n    const processOpenComponentPopup = () => {\n        component_fields = {\n            component_name : true,\n            component_date : true,\n            component_version : true\n        }\n        POPUP.NEW_COMPONENT = true;\n    }\n    \n    const processEditComponentPopup = (component_id) => {\n        for(let i=0;i<selected_list.list_components.length;i++){\n            if(selected_list.list_components[i].component_id === component_id){\n                selected_component = JSON.parse(JSON.stringify(selected_list.list_components[i]));\n                backup_selected_component = JSON.parse(JSON.stringify(selected_list.list_components[i]));\n            }\n        }\n        component_fields = {\n            component_name : true,\n            component_date : true,\n            component_version : true\n        }\n        POPUP.EDIT_COMPONENT = true;\n    }\n\n    const saveNewComponent = () => {\n        if(!new_component.component_name){\n            component_fields.component_name = false;\n            return;\n        }else{\n            component_fields.component_name = true;\n        }\n        if(!new_component.component_date){\n            component_fields.component_date = false;\n            return;\n        }else{\n            component_fields.component_date = true;\n        }\n\n        if(new_component.component_type === \"Omniscript\" || new_component.component_type === \"Integration Procedure\" || new_component.component_type === \"Flow\"){\n            if(!new_component.component_version){\n                component_fields.component_version = false;\n                return;\n            }else{\n                component_fields.component_version = true;\n            }\n        }else{\n            component_fields.component_version = true;\n        }\n\n        fireEvent(EVENTS.SHOW_SPINNER,{});\n        createComponentCallout(\n            AUTH.currentUser.uid,\n            new_component.component_name,\n            JSON.stringify({\n                type : new_component.component_type,\n                version : new_component.component_version,\n                parent_component : new_component.component_parent_name,\n                date : new_component.component_date\n            }),\n            selected_list.list_component_root_id\n        )\n        .then(res => {\n            selected_list.list_components.push({\n                component_id:res.component_id,\n                component_name : res.component_name,\n                component_type : res.component_type,\n                component_version : res.component_version,\n                component_parent_name : res.component_parent_name,\n                component_date : res.component_date,\n            });\n\n            const selected_list_index = store.findIndex(list => list.list_id === selected_list.list_id);\n            store.splice(selected_list_index,1,selected_list);\n\n            new_component = {\n                component_name : \"\",\n                component_type : DEFAULTS.COMPONENT_TYPE,\n                component_version : \"\",\n                component_parent_name : \"\",\n                component_date : \"\"\n            };\n\n            selected_list = selected_list;\n            store = store;\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n            fireEvent(EVENTS.CLOSE_POPUP,'NEW_COMPONENT');\n        })\n        .catch(err => {\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n        });\n    }\n\n    const updateComponent = () => {\n        if(!selected_component.component_name){\n            component_fields.component_name = false;\n            return;\n        }else{\n            component_fields.component_name = true;\n        }\n        if(!selected_component.component_date){\n            component_fields.component_date = false;\n            return;\n        }else{\n            component_fields.component_date = true;\n        }\n\n        if(selected_component.component_type === \"Omniscript\" || selected_component.component_type === \"Integration Procedure\" || selected_component.component_type === \"Flow\"){\n            if(!selected_component.component_version){\n                component_fields.component_version = false;\n                return;\n            }else{\n                component_fields.component_version = true;\n            }\n        }else{\n            component_fields.component_version = true;\n        }\n\n        fireEvent(EVENTS.SHOW_SPINNER,{});\n        updateComponentCallout(\n            AUTH.currentUser.uid,\n            selected_component.component_id,\n            selected_component.component_name,\n            JSON.stringify({\n                type : selected_component.component_type,\n                version : selected_component.component_version,\n                parent_component : selected_component.component_parent_name,\n                date : selected_component.component_date\n            })\n        )\n        .then(res => {\n            selected_component = selected_component;\n            backup_selected_component = JSON.parse(JSON.stringify(selected_component));\n\n            const selected_component_index = selected_list.list_components.findIndex(component => component.component_id === selected_component.component_id);\n            selected_list.list_components.splice(selected_component_index,1,selected_component);\n            \n            selected_list = selected_list;\n\n            const selected_list_index = store.findIndex(list => list.list_id === selected_list.list_id);\n            store.splice(selected_list_index,1,selected_list);\n            \n            store = store;\n\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n            fireEvent(EVENTS.CLOSE_POPUP,'EDIT_COMPONENT');\n        })\n        .catch(err => {\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n        });\n    }\n\n    const processDeleteComponent = (component_id) => {\n        if(selected_list.list_components.filter(component => component.component_id == component_id).length){\n            let sure = window.confirm(`Are you sure you want to delete the component?`) ;\n            if(!sure) return;\n            fireEvent(EVENTS.SHOW_SPINNER,{});\n            deleteComponentCallout(\n                AUTH.currentUser.uid,\n                component_id\n            )\n            .then(res => {\n                for(let i=0;i<selected_list.list_components.length;i++){\n                    if(selected_list.list_components[i].component_id === component_id){\n                        selected_list.list_components.splice(i,1);\n                    }\n                }\n                selected_list = selected_list;\n                store = store;\n                fireEvent(EVENTS.HIDE_SPINNER,{});\n            })\n            .catch(err => {\n                fireEvent(EVENTS.HIDE_SPINNER,{});\n            });\n        }\n    }\n    \n    const processViewData = ({new_view,current_view}) => {\n        if(new_view === \"ALLTASKS\"){\n            let tasks = [];\n            if(store && store.length){\n                store.forEach(list => {\n                    if(list.list_tasks && list.list_tasks.length){\n                        tasks.push(...list.list_tasks)\n                    }\n                })\n            }\n            fireEvent(EVENTS.SEND_VIEW_DATA,{\n                view : new_view,\n                data : tasks\n            });\n        }else if(new_view === \"ALLCOMPONENTS\"){\n            let components = [];\n            if(store && store.length){\n                store.forEach(list => {\n                    if(list.list_components && list.list_components.length){\n                        components.push(...list.list_components)\n                    }\n                })\n            }\n            fireEvent(EVENTS.SEND_VIEW_DATA,{\n                view : new_view,\n                data : components\n            });\n        }else{\n            fireEvent(EVENTS.SEND_VIEW_DATA,{\n                view : new_view,\n                data : null\n            });\n        }\n    }\n\n    onMount( () => {\n        \n        registerListener(EVENTS.SELECT_LIST,processSelectListEvent);\n        registerListener(EVENTS.OPEN_NEW_LIST_POPUP,processOpenNewListPopup);\n        registerListener(EVENTS.OPEN_EDIT_LIST_POPUP,processEditListPopup);\n        registerListener(EVENTS.DELETE_LIST,processDeleteList);\n\n        registerListener(EVENTS.OPEN_NEW_TASK_POPUP,processOpenTaskPopup);\n        registerListener(EVENTS.OPEN_EDIT_TASK_POPUP,processEditTaskPopup);\n        registerListener(EVENTS.DELETE_TASK,processDeleteTask);\n\n        registerListener(EVENTS.OPEN_NEW_COMPONENT_POPUP,processOpenComponentPopup);\n        registerListener(EVENTS.OPEN_EDIT_COMPONENT_POPUP,processEditComponentPopup);\n        registerListener(EVENTS.DELETE_COMPONENET,processDeleteComponent);\n\n        registerListener(EVENTS.CLOSE_POPUP,processClosePopup);\n        registerListener(EVENTS.GET_VIEW_DATA,processViewData);\n        \n        fireEvent(EVENTS.SHOW_SPINNER,{});\n\n        getUserDataCallout(AUTH.currentUser.uid)\n        .then(res => {\n            if(res && res.data && res.data.length){\n                store = res.data;\n                for(let i=0;i<store.length;i++){\n                    lists.push({\n                        list_id : store[i].list_id,\n                        list_name : store[i].list_name\n                    });\n                }\n                lists = lists;\n                store = store;\n                fireEvent(EVENTS.HIDE_SPINNER,{});\n            }else{\n                fireEvent(EVENTS.HIDE_SPINNER,{});\n            }\n        })\n        .catch(err => {\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n        })\n    });\n\n    onDestroy( () => {\n        unregisterListener(EVENTS.SELECT_LIST,processSelectListEvent);\n        unregisterListener(EVENTS.OPEN_NEW_LIST_POPUP,processOpenNewListPopup);\n        unregisterListener(EVENTS.OPEN_EDIT_LIST_POPUP,processEditListPopup);\n        unregisterListener(EVENTS.DELETE_LIST,processDeleteList);\n\n        unregisterListener(EVENTS.OPEN_NEW_TASK_POPUP,processOpenTaskPopup);\n        unregisterListener(EVENTS.OPEN_EDIT_TASK_POPUP,processEditTaskPopup);\n        unregisterListener(EVENTS.DELETE_TASK,processDeleteTask);\n\n        unregisterListener(EVENTS.OPEN_NEW_COMPONENT_POPUP,processOpenComponentPopup);\n        unregisterListener(EVENTS.OPEN_EDIT_COMPONENT_POPUP,processEditComponentPopup);\n        unregisterListener(EVENTS.DELETE_COMPONENET,processDeleteComponent);\n\n        unregisterListener(EVENTS.CLOSE_POPUP,processClosePopup);\n    })\n</script>\n\n<div class=\"app-container flex align-center flex-column\">\n    <Sidebar {lists} selected_list_id={selected_list?.list_id}/>\n    {#if selected_list}\n        <Container {selected_list}/>\n    {/if}\n</div>\n\n{#if POPUP.NEW_LIST}\n    <Popup header=\"New User Story\" _popup_name=\"NEW_LIST\" OnSave={saveNewList}>\n        <div class=\"flex flex-column justify-center\">\n\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={list_fields.list_name ? '' : 'has-error'} data_type=\"field\" label=\"Name\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent {list_fields.list_name ? '' : 'has-error'}\" value={new_list.list_name} onChange={handleNewListChange} data_field=\"list_name\" Required/>\n                </div>\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Status\" hasLabel width_class=\"width-full\" type=\"select\" classes={getStatusClass(new_list.list_status)} value={new_list.list_status} onChange={handleNewListChange} data_field=\"list_status\" options={LIST_STATUS} Required/>\n                </div>\n                \n            </div>\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={list_fields.list_start_date ? '' : 'has-error'} data_type=\"field\" label=\"Start Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent {list_fields.list_start_date ? '' : 'has-error'}\" value={new_list.list_start_date} onChange={handleNewListChange} data_field=\"list_start_date\" Required={new_list.list_status == \"In Progress\" || new_list.list_status == \"Completed\" }/>\n                </div>\n                \n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={list_fields.list_end_date ? '' : 'has-error'} data_type=\"field\" label=\"End Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent {list_fields.list_end_date ? '' : 'has-error'}\" value={new_list.list_end_date} onChange={handleNewListChange} data_field=\"list_end_date\" Required={new_list.list_status == \"Completed\"}/>\n                </div>\n                \n            </div>\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Description\" hasLabel width_class=\"width-full\" type=\"text-long\" classes=\"bg-transparent\" value={new_list.list_description} onChange={handleNewListChange} data_field=\"list_description\" />\n                </div>\n                \n            </div>\n            \n        </div>\n    </Popup>\n{/if}\n\n{#if POPUP.EDIT_LIST}\n    <Popup header=\"Edit User Story\" _popup_name=\"EDIT_LIST\" OnSave={updateList}>\n        <div class=\"flex flex-column justify-center\">\n\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={list_fields.list_name ? '' : 'has-error'} data_type=\"field\" label=\"Name\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent {list_fields.list_name ? '' : 'has-error'}\" value={selected_list.list_name} onChange={handleExistingListChange} data_field=\"list_name\" Required/>\n                </div>\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Status\" hasLabel width_class=\"width-full\" type=\"select\" classes={getStatusClass(selected_list.list_status)} value={selected_list.list_status} onChange={handleExistingListChange} data_field=\"list_status\" options={LIST_STATUS} Required/>\n                </div>\n                \n            </div>\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={list_fields.list_start_date ? '' : 'has-error'} data_type=\"field\" label=\"Start Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent {list_fields.list_start_date ? '' : 'has-error'}\" value={selected_list.list_start_date} onChange={handleExistingListChange} data_field=\"list_start_date\" Required={selected_list.list_status == \"In Progress\" || selected_list.list_status == \"Completed\"}/>\n                </div>\n                \n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={list_fields.list_end_date ? '' : 'has-error'} data_type=\"field\" label=\"End Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent {list_fields.list_end_date ? '' : 'has-error'}\" value={selected_list.list_end_date} onChange={handleExistingListChange} data_field=\"list_end_date\" Required={selected_list.list_status == \"Completed\"}/>\n                </div>\n                \n            </div>\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Description\" hasLabel width_class=\"width-full\" type=\"text-long\" classes=\"bg-transparent\" value={selected_list.list_description} onChange={handleExistingListChange} data_field=\"list_description\" />\n                </div>\n                \n            </div>\n            \n        </div>\n    </Popup>\n{/if}\n\n{#if POPUP.NEW_TASK}\n    <Popup header=\"New Task\" _popup_name=\"NEW_TASK\" OnSave={saveNewTask}>\n        <div class=\"flex flex-column justify-center\">\n\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={task_fields.task_name ? '' : 'has-error'} data_type=\"field\" label=\"Name\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent {task_fields.task_name ? '' : 'has-error'}\" value={new_task.task_name} onChange={handleNewTaskChange} data_field=\"task_name\" Required/>\n                </div>\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Status\" hasLabel width_class=\"width-full\" type=\"select\" classes={getStatusClass(new_task.task_status)} value={new_task.task_status} onChange={handleNewTaskChange} data_field=\"task_status\" options={TASK_STATUS} Required/>\n                </div>\n                \n            </div>\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={task_fields.task_start_date ? '' : 'has-error'} data_type=\"field\" label=\"Start Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent {task_fields.task_start_date ? '' : 'has-error'}\" value={new_task.task_start_date} onChange={handleNewTaskChange} data_field=\"task_start_date\" Required={new_task.task_status == \"In Progress\" || new_task.task_status == \"Completed\"}/>\n                </div>\n                \n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={task_fields.task_end_date ? '' : 'has-error'} data_type=\"field\" label=\"End Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent {task_fields.task_end_date ? '' : 'has-error'}\" value={new_task.task_end_date} onChange={handleNewTaskChange} data_field=\"task_end_date\" Required={new_task.task_status == \"Completed\"}/>\n                </div>\n                \n            </div>\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Description\" hasLabel width_class=\"width-full\" type=\"text-long\" classes=\"bg-transparent\" value={new_task.task_description} onChange={handleNewTaskChange} data_field=\"task_description\" />\n                </div>\n                \n            </div>\n            \n        </div>\n    </Popup>\n{/if}\n\n{#if POPUP.EDIT_TASK}\n    <Popup header=\"Edit Task\" _popup_name=\"EDIT_TASK\" OnSave={updateTask}>\n        <div class=\"flex flex-column justify-center\">\n\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={task_fields.task_name ? '' : 'has-error'} data_type=\"field\" label=\"Name\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent {task_fields.task_name ? '' : 'has-error'}\" value={selected_task.task_name} onChange={handleExistingTaskChange} data_field=\"task_name\" Required/>\n                </div>\n                \n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Status\" hasLabel width_class=\"width-full\" type=\"select\" classes={getStatusClass(selected_task.task_status)} value={selected_task.task_status} onChange={handleExistingTaskChange} data_field=\"task_status\" options={TASK_STATUS} Required/>\n                </div>\n                \n            </div>\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={task_fields.task_start_date ? '' : 'has-error'} data_type=\"field\" label=\"Start Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent {task_fields.task_start_date ? '' : 'has-error'}\" value={selected_task.task_start_date} onChange={handleExistingTaskChange} data_field=\"task_start_date\" Required={selected_task.task_status == \"In Progress\"  || selected_task.task_status == \"Completed\"}/>\n                </div>\n                \n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={task_fields.task_end_date ? '' : 'has-error'} data_type=\"field\" label=\"End Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent {task_fields.task_end_date ? '' : 'has-error'}\" value={selected_task.task_end_date} onChange={handleExistingTaskChange} data_field=\"task_end_date\" Required={selected_task.task_status == \"Completed\"}/>\n                </div>\n                \n            </div>\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Description\" hasLabel width_class=\"width-full\" type=\"text-long\" classes=\"bg-transparent\" value={selected_task.task_description} onChange={handleExistingTaskChange} data_field=\"task_description\" />\n                </div>\n                \n            </div>\n            \n        </div>\n    </Popup>\n{/if}\n\n{#if POPUP.NEW_COMPONENT}\n    <Popup header=\"New Component\" _popup_name=\"NEW_COMPONENT\" OnSave={saveNewComponent}>\n        <div class=\"flex flex-column justify-center\">\n            <div class=\"flex form-row\">\n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={component_fields.component_name ? '' : 'has-error'} data_type=\"field\" label=\"Name\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent {component_fields.component_name ? '' : 'has-error'}\" value={new_component.component_name} onChange={handleNewComponentChange} data_field=\"component_name\" Required/>\n                </div>\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Type\" hasLabel width_class=\"width-full\" type=\"select\" classes=\"bg-transparent Component-Type {getComponentTypeClass(new_component.component_type)}\" value={new_component.component_type} onChange={handleNewComponentChange} data_field=\"component_type\" options={COMPONENT_TYPE_LIST} Required/>\n                </div>\n            </div>\n            <div class=\"flex form-row\">\n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={component_fields.component_date ? '' : 'has-error'} data_type=\"field\" label=\"Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent {component_fields.component_date ? '' : 'has-error'}\" value={new_component.component_date} onChange={handleNewComponentChange} data_field=\"component_date\" Required/>\n                </div>\n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={component_fields.component_version ? '' : 'has-error'} data_type=\"field\" label=\"Version\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent {component_fields.component_version ? '' : 'has-error'}\" value={new_component.component_version} onChange={handleNewComponentChange} data_field=\"component_version\" Required={new_component.component_type === \"Omniscript\" || new_component.component_type === \"Integration Procedure\" || new_component.component_type === \"Flow\"}/>\n                </div>\n            </div>\n            <div class=\"flex form-row\">\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Parent Component (if any)\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent\" value={new_component.component_parent_name} onChange={handleNewComponentChange} data_field=\"component_parent_name\" />\n                </div>\n            </div>\n        </div>\n    </Popup>\n{/if}\n\n{#if POPUP.EDIT_COMPONENT}\n    <Popup header=\"Edit Component\" _popup_name=\"EDIT_COMPONENT\" OnSave={updateComponent}>\n        <div class=\"flex flex-column justify-center\">\n\n            <div class=\"flex form-row\">\n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={component_fields.component_name ? '' : 'has-error'} data_type=\"field\" label=\"Name\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent {component_fields.component_name ? '' : 'has-error'}\" value={selected_component.component_name} onChange={handleExistingComponentChange} data_field=\"component_name\" Required/>\n                </div>\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Type\" hasLabel width_class=\"width-full\" type=\"select\" classes=\"bg-transparent Component-Type {getComponentTypeClass(selected_component.component_type)}\" value={selected_component.component_type} onChange={handleExistingComponentChange} data_field=\"component_type\" options={COMPONENT_TYPE_LIST} Required/>\n                </div>\n                \n            </div>\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={component_fields.component_date ? '' : 'has-error'} data_type=\"field\" label=\"Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent {component_fields.component_date ? '' : 'has-error'}\" value={selected_component.component_date} onChange={handleExistingComponentChange} data_field=\"component_date\" Required/>\n                </div>\n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={component_fields.component_version ? '' : 'has-error'} data_type=\"field\" label=\"Version\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent {component_fields.component_version ? '' : 'has-error'}\" value={selected_component.component_version} onChange={handleExistingComponentChange} data_field=\"component_version\" Required={selected_component.component_type === \"Omniscript\" || selected_component.component_type === \"Integration Procedure\" || selected_component.component_type === \"Flow\"}/>\n                </div>\n                \n            </div>\n            <div class=\"flex form-row\">\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Parent Component (if any)\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent\" value={selected_component.component_parent_name} onChange={handleExistingComponentChange} data_field=\"component_parent_name\" />\n                </div>\n            </div>\n            \n        </div>\n    </Popup>\n{/if}\n\n\n<style>\n\n    .app-container{\n        margin:0;\n        padding: 0;\n        height: 100vh;\n    }\n\n    .form-row{\n        padding: 1rem 0;\n    }\n\n    .form-column{\n        padding: 0 1rem;\n        width: 50%;\n    }\n\n</style>","<script>\n    import { onDestroy, onMount } from \"svelte\";\n    import { TASK_COLUMN } from \"../constants\";\n    import { AUTH } from \"../firebase\";\n    import Input from \"../utility/Input.svelte\";\n    import Popup from \"../utility/Popup.svelte\";\n    import Button from \"../utility/Button.svelte\";\n    import Icon from \"../utility/Icon.svelte\";\n    import Task from \"../Task.svelte\";\n    import {registerListener , unregisterListener,fireEvent , EVENTS} from '../EventManager';\n    import { getStatusClass, TASK_STATUS , DEFAULTS} from \"../constants\";\n    import {getUserGeneralTasksCallout,createGeneralTaskCallout,updateGeneralTaskCallout,deleteGeneralTaskCallout,deleteGeneralBulkTaskCallout} from \"../api\";\n\n    export let tasks = [];\n    let filtered_tasks;\n    const POPUP = {\n        NEW_TASK : false,\n        EDIT_TASK : false\n    }\n\n    let selected_tasks = [];\n\n    const processClosePopup = (_popup) => {\n        POPUP[_popup] = false;   \n    }\n\n    const openNewTaskPopup = () => {\n        task_fields = {\n            task_name : true,\n            task_start_date : true,\n            task_end_date : true\n        }\n        POPUP.NEW_TASK = true;\n    }\n\n    let selected_task;\n    let backup_selected_task;\n    let hasFilterApplied = false;\n    let showFilter = false;\n    \n    let new_task = {\n        task_name : \"\",\n        task_start_date : \"\",\n        task_end_date : \"\",\n        task_status : DEFAULTS.TASK_STATUS,\n        task_description : \"\"\n    };\n\n    let task_fields = {\n        task_name : true,\n        task_start_date : true,\n        task_end_date : true\n    }\n    \n    let task_filter = {\n        status : \"\"\n    }\n\n    const handleNewTaskChange = (e) => {\n        new_task[e.target.dataset.field] = e.target.value;\n    }\n\n    const handleExistingTaskChange = (e) => {\n        selected_task[e.target.dataset.field] = e.target.value;\n    }\n\n    const processEditTaskPopup = (task_id) => {\n        for(let i=0;i<tasks.length;i++){\n            if(tasks[i].task_id === task_id){\n                selected_task = JSON.parse(JSON.stringify(tasks[i]));\n                backup_selected_task = JSON.parse(JSON.stringify(tasks[i]));\n            }\n        }\n        task_fields = {\n            task_name : true,\n            task_start_date : true,\n            task_end_date : true\n        }\n        POPUP.EDIT_TASK = true;\n    }\n\n    const saveNewTask = () => {\n\n        if(!new_task.task_name){\n            task_fields.task_name = false;\n            return;\n        }else{\n            task_fields.task_name = true;\n        }\n\n        if(new_task.task_status === \"Completed\"){\n            if(!new_task.task_start_date){\n                task_fields.task_start_date = false;\n                return;\n            }else{\n                task_fields.task_start_date = true;\n            }\n            if(!new_task.task_end_date){\n                task_fields.task_end_date = false;\n                return;\n            }else{\n                task_fields.task_end_date = true;\n            }\n        }\n\n        if(new_task.task_status === \"In Progress\"){\n            if(!new_task.task_start_date){\n                task_fields.task_start_date = false;\n                return;\n            }else{\n                task_fields.task_start_date = true;\n            }\n        }\n\n        if(new_task.task_start_date && new_task.task_end_date){\n            let start_date = new Date(new_task.task_start_date);\n            let end_date = new Date(new_task.task_end_date);\n            if(end_date - start_date < 0){\n                task_fields.task_end_date = false;\n                task_fields.task_start_date = false;\n                return;\n            }else{\n                task_fields.task_end_date = true;\n                task_fields.task_start_date = true;\n            }\n        }\n\n        fireEvent(EVENTS.SHOW_SPINNER,{});\n        createGeneralTaskCallout(\n            AUTH.currentUser.uid,\n            new_task.task_name,\n            JSON.stringify({\n                description : new_task.task_description,\n                status : new_task.task_status,\n                start_date : new_task.task_start_date,\n                end_date : new_task.task_end_date\n            })\n        )\n        .then(res => {\n            tasks.push({\n                task_id:res.task_id,\n                task_name : res.task_name,\n                task_start_date : res.task_start_date,\n                task_end_date : res.task_end_date,\n                task_description : res.task_description,\n                task_status : res.task_status\n            });\n            tasks = tasks;\n            filtered_tasks = tasks;\n            filtered_tasks = filtered_tasks;\n            new_task = {\n                task_name : \"\",\n                task_start_date : \"\",\n                task_end_date : \"\",\n                task_status : DEFAULTS.TASK_STATUS,\n                task_description : \"\"\n            };\n            \n            fireEvent(EVENTS.HIDE_SPINNER,{});\n            fireEvent(EVENTS.CLOSE_POPUP,'NEW_TASK');\n        })\n        .catch(err => {\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n        });\n    }\n\n    const updateTask = () => {\n        if(!selected_task.task_name){\n            task_fields.task_name = false;\n            return;\n        }else{\n            task_fields.task_name = true;\n        }\n\n        if(selected_task.task_status === \"Completed\"){\n            if(!selected_task.task_start_date){\n                task_fields.task_start_date = false;\n                return;\n            }else{\n                task_fields.task_start_date = true;\n            }\n            if(!selected_task.task_end_date){\n                task_fields.task_end_date = false;\n                return;\n            }else{\n                task_fields.task_end_date = true;\n            }\n        }\n\n        if(selected_task.task_status === \"In Progress\"){\n            if(!selected_task.task_start_date){\n                task_fields.task_start_date = false;\n                return;\n            }else{\n                task_fields.task_start_date = true;\n            }\n        }\n\n        if(selected_task.task_start_date && selected_task.task_end_date){\n            let start_date = new Date(selected_task.task_start_date);\n            let end_date = new Date(selected_task.task_end_date);\n            if(end_date - start_date < 0){\n                task_fields.task_end_date = false;\n                task_fields.task_start_date = false;\n                return;\n            }else{\n                task_fields.task_end_date = true;\n                task_fields.task_start_date = true;\n            }\n        }\n        fireEvent(EVENTS.SHOW_SPINNER,{});\n        updateGeneralTaskCallout(\n            AUTH.currentUser.uid,\n            selected_task.task_id,\n            selected_task.task_name,\n            JSON.stringify({\n                description : selected_task.task_description,\n                status : selected_task.task_status,\n                start_date : selected_task.task_start_date,\n                end_date : selected_task.task_end_date\n            })\n        )\n        .then(res => {\n            selected_task = selected_task;\n            backup_selected_task = JSON.parse(JSON.stringify(selected_task));\n\n            const selected_task_index = tasks.findIndex(task => task.task_id === selected_task.task_id);\n            tasks.splice(selected_task_index,1,selected_task);\n            \n            tasks = tasks;\n            filtered_tasks = tasks;\n            filtered_tasks = filtered_tasks;\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n            fireEvent(EVENTS.CLOSE_POPUP,'EDIT_TASK');\n        })\n        .catch(err => {\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n        });\n    }\n\n    const processDeleteTask = (task_id) => {\n        if(tasks.filter(task => task.task_id == task_id).length){\n            let sure = window.confirm(`Are you sure you want to delete the task?`);\n            if(!sure) return;\n            fireEvent(EVENTS.SHOW_SPINNER,{});\n            deleteGeneralTaskCallout(\n                AUTH.currentUser.uid,\n                task_id\n            )\n            .then(res => {\n                tasks = tasks.filter(task => task.task_id !== task_id);\n                filtered_tasks = tasks;\n                filtered_tasks = filtered_tasks;\n                fireEvent(EVENTS.HIDE_SPINNER,{});\n            })\n            .catch(err => {\n                fireEvent(EVENTS.HIDE_SPINNER,{});\n            });\n        }\n    }\n\n    const processSelectTask = ({task_id,isSelected}) => {\n        if(isSelected) selected_tasks.push(task_id);\n        if(!isSelected) selected_tasks = selected_tasks.filter(taskId => taskId !== task_id);\n        selected_tasks = selected_tasks;\n    }\n\n    const applyFilter = () => {\n        if(task_filter.status){\n            hasFilterApplied = true;\n            filtered_tasks = tasks.filter(task => task.task_status === task_filter.status);\n            filtered_tasks = filtered_tasks;\n        }\n    }\n\n    const deleteBulkTasks = () => {\n        \n        if(selected_tasks && selected_tasks){\n            if(selected_tasks.length === 1){\n                processDeleteTask(selected_tasks[0]);\n            }else{\n                let sure = window.confirm(`Are you sure you want to delete the tasks?`);\n                if(!sure) return;\n                deleteGeneralBulkTaskCallout(\n                    AUTH.currentUser.uid,\n                    selected_tasks\n                )\n                .then(res => {\n                    console.log('1',tasks.length);\n                    tasks = tasks.filter(task => !selected_tasks.includes(task.task_id));\n                    console.log('2',tasks.length);\n                    filtered_tasks = tasks;\n                    console.log('3',filtered_tasks.length);\n                    filtered_tasks = filtered_tasks;\n                    console.log('4',filtered_tasks.length);\n                    selected_tasks = [];\n                    selected_tasks = selected_tasks;\n                    fireEvent(EVENTS.HIDE_SPINNER,{});\n                })\n                .catch(err => {\n                    fireEvent(EVENTS.HIDE_SPINNER,{});\n                });\n            }\n            \n        }\n    }\n\n    const handleFilterChange = (e) => {\n        task_filter[e.target.dataset.field] = e.target.value;\n    }\n\n    const clearFilter = () => {\n        filtered_tasks = tasks;\n        filtered_tasks = filtered_tasks;\n        hasFilterApplied = false;\n        task_filter.status = \"\";\n    }\n\n    const toggleFilter = () => {\n        showFilter = !showFilter;\n    }\n\n    onMount( () => {\n        registerListener(EVENTS.OPEN_EDIT_TASK_POPUP,processEditTaskPopup);\n        registerListener(EVENTS.DELETE_TASK,processDeleteTask);\n        registerListener(EVENTS.CLOSE_POPUP,processClosePopup);\n        registerListener(EVENTS.SELECT_TASK,processSelectTask);\n        fireEvent(EVENTS.SHOW_SPINNER,{});\n        getUserGeneralTasksCallout(AUTH.currentUser.uid)\n        .then(res => {\n            tasks = res.data;\n            filtered_tasks = tasks;\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n        })\n        .catch(err => {\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n        });\n        filtered_tasks = tasks;\n    });\n\n    onDestroy(()=>{\n        unregisterListener(EVENTS.OPEN_EDIT_TASK_POPUP,processEditTaskPopup);\n        unregisterListener(EVENTS.DELETE_TASK,processDeleteTask);\n        unregisterListener(EVENTS.CLOSE_POPUP,processClosePopup);\n        unregisterListener(EVENTS.SELECT_TASK,processSelectTask);\n    })\n\n</script>\n\n<div class=\"app-container flex align-center flex-column\">\n    \n    {#if selected_tasks.length == 0 && tasks && tasks.length}\n        <div class=\"filter-container relative {showFilter ? 'show-filter-class' : 'hide-filter-class'}\">\n            <div class=\"filter-toggle flex justify-end\">\n                {#if !showFilter}\n                    <Icon type=\"primary\" OnClick={toggleFilter}>\n                        <svg xmlns='http://www.w3.org/2000/svg' fill=\"currentcolor\" viewBox='0 0 24 24' width='24' height='24'>\n                            <path d=\"M21 3H5a1 1 0 0 0-1 1v2.59c0 .523.213 1.037.583 1.407L10 13.414V21a1.001 1.001 0 0 0 1.447.895l4-2c.339-.17.553-.516.553-.895v-5.586l5.417-5.417c.37-.37.583-.884.583-1.407V4a1 1 0 0 0-1-1zm-6.707 9.293A.996.996 0 0 0 14 13v5.382l-2 1V13a.996.996 0 0 0-.293-.707L6 6.59V5h14.001l.002 1.583-5.71 5.71z\"></path>\n                        </svg>\n                    </Icon>\n                    {:else}\n                    <Icon type=\"primary\" OnClick={toggleFilter}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"21px\" height=\"21px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"pointer\">\n                            <line data-v-6b93e4ba=\"\" x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                            <line data-v-6b93e4ba=\"\" x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                        </svg>\n                    </Icon>\n                {/if}\n            </div>\n            {#if showFilter}\n                <div class=\"flex form-header\">\n                    <div class=\"form-title\">Filters</div>\n                </div>\n                <div class=\"flex form-row\">\n                    <div class=\"flex flex-column form-column grow\">\n                        <Input data_type=\"field\" label=\"Status\" width_class=\"width-hald\" type=\"select\" classes={getStatusClass(task_filter.status)} value={task_filter.status} onChange={handleFilterChange} data_field=\"status\" options={TASK_STATUS}/>\n                    </div>\n                    \n                    <div class=\"flex form-column align-end justify-start\">\n                        <Button onClick={applyFilter} label=\"Apply\" type=\"primary\"/>\n                        {#if hasFilterApplied}\n                        &nbsp;&nbsp;\n                        <Button onClick={clearFilter} label=\"Clear\" type=\"danger\"/>\n                        {/if}\n                    </div>\n                </div>\n            {/if}\n            \n        </div>\n    {/if}\n\n    <div class=\"task-header flex align-center justify-space-between\">\n        <div class=\"flex align-center\">\n            <svg data-v-1134b199=\"\" xmlns=\"http://www.w3.org/2000/svg\" width=\"21px\" height=\"21px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon\">\n                <polyline data-v-1134b199=\"\" points=\"9 11 12 14 22 4\"></polyline>\n                <path data-v-1134b199=\"\" d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"></path>\n            </svg>\n            <span class=\"task-title\"> Tasks </span>\n        </div>\n        {#if selected_tasks.length == 0}\n            <Icon type=\"primary\" OnClick={openNewTaskPopup}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-plus\">\n                    <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                </svg>\n            </Icon>\n        {/if}\n    </div>\n\n    {#if filtered_tasks && filtered_tasks.length}\n        <div class=\"task-container flex justify-start align-center grow flex-column\">\n            {#if selected_tasks && selected_tasks.length}\n                <li class=\"columns flex justify-end align-center table-actions\">\n                    <Button type=\"danger\" label=\"Delete {selected_tasks.length} task{selected_tasks.length>1 ? 's' : ''}\" onClick={deleteBulkTasks}></Button>\n                </li>\n            {/if}\n            <li class=\"columns flex justify-end align-center text-white text-bold\">\n                <div class=\"flex justify-center aggregator-container\">\n                    <span class=\"flex align-center justify-center badge grow badge-not-started\">{filtered_tasks.filter(task => task.task_status === \"Not Started\").length}</span>\n                    <span class=\"flex align-center justify-center badge grow badge-in-progress\">{filtered_tasks.filter(task => task.task_status === \"In Progress\").length}</span>\n                    <span class=\"flex align-center justify-center badge grow badge-completed\">{filtered_tasks.filter(task => task.task_status === \"Completed\").length}</span>\n                </div>\n            </li>\n            <li class=\"columns flex justify-space-between align-center text-white text-bold\">\n                {#each TASK_COLUMN as column}\n                    {#if column.show_in_list}\n                        <span class=\"column flex justify-center grow border-box text-bold {column.key}\">{ column.show_header ? column.label : ''}</span>    \n                    {/if}\n                {/each}\n            </li>\n           \n            {#each filtered_tasks as task}\n                <Task {task} actions={['EDIT','DELETE']} allowSelection isSelected={selected_tasks.includes(task.task_id)}/>    \n            {/each}\n        </div>\n        {:else}\n        <div role=\"alert\" aria-live=\"polite\" aria-atomic=\"true\" class=\"alert alert-primary\" data-v-aa799a9e=\"\">\n            <div class=\"alert-body box-border\">\n                <span>No Tasks.</span>\n            </div>\n        </div>\n    {/if}\n</div>\n\n{#if POPUP.NEW_TASK}\n    <Popup header=\"New Task\" _popup_name=\"NEW_TASK\" OnSave={saveNewTask}>\n        <div class=\"flex flex-column justify-center\">\n\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={task_fields.task_name ? '' : 'has-error'} data_type=\"field\" label=\"Name\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent {task_fields.task_name ? '' : 'has-error'}\" value={new_task.task_name} onChange={handleNewTaskChange} data_field=\"task_name\" Required/>\n                </div>\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Status\" hasLabel width_class=\"width-full\" type=\"select\" classes={getStatusClass(new_task.task_status)} value={new_task.task_status} onChange={handleNewTaskChange} data_field=\"task_status\" options={TASK_STATUS} Required/>\n                </div>\n                \n            </div>\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={task_fields.task_start_date ? '' : 'has-error'} data_type=\"field\" label=\"Start Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent {task_fields.task_start_date ? '' : 'has-error'}\" value={new_task.task_start_date} onChange={handleNewTaskChange} data_field=\"task_start_date\" Required={new_task.task_status == \"In Progress\" || new_task.task_status == \"Completed\"}/>\n                </div>\n                \n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={task_fields.task_end_date ? '' : 'has-error'} data_type=\"field\" label=\"End Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent {task_fields.task_end_date ? '' : 'has-error'}\" value={new_task.task_end_date} onChange={handleNewTaskChange} data_field=\"task_end_date\" Required={new_task.task_status == \"Completed\"}/>\n                </div>\n                \n            </div>\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Description\" hasLabel width_class=\"width-full\" type=\"text-long\" classes=\"bg-transparent\" value={new_task.task_description} onChange={handleNewTaskChange} data_field=\"task_description\" />\n                </div>\n                \n            </div>\n            \n        </div>\n    </Popup>\n{/if}\n\n{#if POPUP.EDIT_TASK}\n    <Popup header=\"Edit Task\" _popup_name=\"EDIT_TASK\" OnSave={updateTask}>\n        <div class=\"flex flex-column justify-center\">\n\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={task_fields.task_name ? '' : 'has-error'} data_type=\"field\" label=\"Name\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent {task_fields.task_name ? '' : 'has-error'}\" value={selected_task.task_name} onChange={handleExistingTaskChange} data_field=\"task_name\" Required/>\n                </div>\n                \n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Status\" hasLabel width_class=\"width-full\" type=\"select\" classes={getStatusClass(selected_task.task_status)} value={selected_task.task_status} onChange={handleExistingTaskChange} data_field=\"task_status\" options={TASK_STATUS} Required/>\n                </div>\n                \n            </div>\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={task_fields.task_start_date ? '' : 'has-error'} data_type=\"field\" label=\"Start Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent {task_fields.task_start_date ? '' : 'has-error'}\" value={selected_task.task_start_date} onChange={handleExistingTaskChange} data_field=\"task_start_date\" Required={selected_task.task_status == \"In Progress\" || selected_task.task_status == \"Completed\"}/>\n                </div>\n                \n                <div class=\"flex flex-column form-column grow\">\n                    <Input label_class={task_fields.task_end_date ? '' : 'has-error'} data_type=\"field\" label=\"End Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent {task_fields.task_end_date ? '' : 'has-error'}\" value={selected_task.task_end_date} onChange={handleExistingTaskChange} data_field=\"task_end_date\" Required={selected_task.task_status == \"Completed\"}/>\n                </div>\n                \n            </div>\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Description\" hasLabel width_class=\"width-full\" type=\"text-long\" classes=\"bg-transparent\" value={selected_task.task_description} onChange={handleExistingTaskChange} data_field=\"task_description\" />\n                </div>\n                \n            </div>\n            \n        </div>\n    </Popup>\n{/if}\n\n<style>\n\n    .app-container{\n        margin:0;\n        padding: 0;\n        height: 100vh;\n        width: 95vw;\n        margin-left: 5vw;\n    }\n\n    .task-header , .task-container{\n        width : 80%\n    }\n\n    .task-header{\n        border-bottom: 1px solid var(--border-tertiary-color);\n        margin: 5vh 0 5px 0;\n        padding: 8px 0;\n        color : var(--primary-color);\n    }\n\n    .task-title{\n        font-size: 1.5rem;\n        color: var(--primary-color);\n    }\n\n    .columns{\n        width: 100%;\n        list-style: none;\n    }\n\n    .form-row{\n        padding: 1rem 0;\n    }\n\n    .form-column{\n        padding: 0 1rem;\n        width: 50%;\n    }\n\n    .column{\n        padding: 0.5rem;\n    }\n\n    .task_name{\n        width: 55%;\n    }\n\n    .task_start_date,.task_end_date{\n        width: 15%;\n    }\n\n    .task_status{\n        width: 15%;\n    }\n\n    .column:first-of-type{\n        border-left: 0;\n    }\n\n    .column:last-of-type{\n        border-right: 0;\n    }\n\n    .action-container{\n        width: 10%;\n    }\n    \n    .task-note{\n        width: 100%;\n    }\n\n    .icon{\n        color: var(--primary-color);\n        font-weight: 400;\n    }\n\n    .task-header .icon{\n        margin-right : 5px;\n    }\n\n    .alert{\n        background-color: rgba(115,103,240,.12);\n        border: none;\n        padding: 0;\n        border-radius: 0.3rem;\n        color : var(--primary-color);\n        width: 80%;\n    }\n\n    .alert-body{\n        padding: .71rem 1rem;\n    }\n\n    .bullet{\n        width: .714rem;\n        height: .714rem;\n        border-radius: 50%;\n    }\n\n    .filter-container{\n        width : 80%\n    }\n\n    .filter-container{\n        /* margin-top: 5vh; */\n        box-shadow: 0 4px 24px 0 rgb(34 41 47 / 24%);\n        border-radius: 5px;\n    }\n\n    .form-title{\n        font-size: 1.25rem;\n        color: var(--primary-color);\n    }\n\n    .form-header{\n        padding: 1rem 1rem 0 1rem;\n    }\n\n    .table-actions{\n        margin: .25rem 0;\n    }\n\n    .filter-toggle{\n        padding : .5rem;\n        right : 0;\n    }\n\n    .show-filter-class{\n        background-color: #7367f01f;\n        margin-top: 5vh;\n    }\n\n    .hide-filter-class{\n        margin-bottom: 0vh;\n    }\n\n    .aggregator-container{\n        width: 15%;\n    }\n\n    .aggregator-container{\n        height: 40px;\n    }\n\n</style>","<script>\n    import { EVENTS , fireEvent } from \"./EventManager\";\n    import Icon from \"./utility/Icon.svelte\";\n    import {signoutUser} from \"./firebase\";\n\n    export let currentView;\n\n    const sendChangeView = (view) => {\n        fireEvent(EVENTS.SELECT_VIEW,view);\n    } \n\n</script>\n\n<main>\n    <div class=\"navigation fixed\">\n        <div class=\"header\">\n            <div class=\"flex align-center justify-space-between logo-container text-center\">\n                <img class=\"navigation-logo\" src=\"./favicon.png\" alt=\"worklist\"/>\n            </div>\n        </div>\n        <div class=\"content\">\n            <ul class=\"flex flex-column justify-space-between list-container\">\n                <li class=\"flex flex-column align-center justify-center list-actions border-box relative\">\n                    <Icon type=\"shaded-white\" selected={currentView === \"LISTS\"} OnClick={ () => {sendChangeView('LISTS')}}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width={currentView === \"LISTS\" ? \"20px\" : \"25px\" } height={currentView === \"LISTS\" ? \"20px\" : \"25px\" } viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"align-center feather feather-file-text svelte-zcrwnl\">\n                            <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\n                            <polyline points=\"14 2 14 8 20 8\"></polyline>\n                            <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line>\n                            <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line>\n                            <polyline points=\"10 9 9 9 8 9\"></polyline>\n                        </svg>\n                    </Icon>\n                    &nbsp;&nbsp;\n                    <Icon type=\"shaded-white\" selected={currentView === \"ALLTASKS\"} OnClick={ () => {sendChangeView('ALLTASKS')}}>\n                        <svg data-v-1134b199=\"\" xmlns=\"http://www.w3.org/2000/svg\" width={currentView === \"ALLTASKS\" ? \"20px\" : \"25px\" } height={currentView === \"ALLTASKS\" ? \"20px\" : \"25px\" } viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"svelte-vd6hsc\">\n                            <polyline data-v-1134b199=\"\" points=\"9 11 12 14 22 4\"></polyline>\n                            <path data-v-1134b199=\"\" d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"></path>\n                        </svg>\n                    </Icon>\n                    &nbsp;&nbsp;\n                    <Icon type=\"shaded-white\" selected={currentView === \"ALLCOMPONENTS\"} OnClick={ () => {sendChangeView('ALLCOMPONENTS')}}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width={currentView === \"ALLCOMPONENTS\" ? \"20px\" : \"25px\" } height={currentView === \"ALLCOMPONENTS\" ? \"20px\" : \"25px\" } viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"svelte-vd6hsc\">\n                            <path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path>\n                            <polyline points=\"13 2 13 9 20 9\"></polyline>\n                        </svg>\n                    </Icon>\n                    &nbsp;&nbsp;\n                    <Icon type=\"shaded-white\" selected={currentView === \"GENERALTASKS\"} OnClick={ () => {sendChangeView('GENERALTASKS')}}>\n                        <svg data-v-32017d0f=\"\" xmlns=\"http://www.w3.org/2000/svg\" width={currentView === \"GENERALTASKS\" ? \"20px\" : \"25px\" } height={currentView === \"GENERALTASKS\" ? \"20px\" : \"25px\" } viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"mr-50 feather feather-database text-success\"><ellipse data-v-32017d0f=\"\" cx=\"12\" cy=\"5\" rx=\"9\" ry=\"3\"></ellipse><path data-v-32017d0f=\"\" d=\"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3\"></path><path data-v-32017d0f=\"\" d=\"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5\"></path></svg>\n                    </Icon>\n                    \n                </li>\n                <li class=\"flex flex-column align-center justify-center list-actions border-box relative\">\n                    <Icon type=\"danger\" OnClick={signoutUser}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"mr-50 feather feather-log-out\">\n                            <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path>\n                            <polyline points=\"16 17 21 12 16 7\"></polyline>\n                            <line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"></line>\n                        </svg>\n                    </Icon>\n                </li>\n            </ul>\n        </div>\n    </div>\n</main>\n\n<style>\n\n    .navigation{\n        width: 5.25rem;\n        background-color: #7367f01f;\n        height: 100%;\n        z-index: 2;\n        left: 0;\n        box-shadow: 0 0 15px 0 rgb(34 41 47 / 5%);\n    }\n\n    .navigation .header{\n        height: 3.3rem;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin-bottom: 1rem;\n    }\n\n    .list-actions{\n        padding: .3rem;\n    }\n\n    .navigation .content{\n        height: calc(100% - 2.45rem);\n    }\n\n    .navigation .list-container{\n        padding: 0;\n        list-style: none;\n        height: 85vh;\n    }\n\n    .list-item{\n        white-space : nowrap;\n        color: var(--text-secondary-color);\n        line-height: 1.45;\n        padding: 0.25rem 0;\n    }\n\n    .list-item .item-content{\n        padding: 10px 15px 10px 15px;\n        margin: 0 15px;\n        width: 100%;\n        border-radius: 5px;\n        overflow: hidden;\n    }\n\n    .item-name{\n        overflow: hidden;\n        text-overflow: ellipsis;\n        width: 90%;\n    }\n\n    .list-logo{\n        margin-right: 8px;\n    }\n\n    .navigation-logo {\n        width: 2.3em;\n    }\n\n    .item-content:hover{\n        background-color: var(--quaternary-color);\n    }\n\n    .item-content.active{\n        background : var(--primary-color);\n    }\n\n    ul{\n        margin: 0;\n    }\n\n\n</style>","<script>\n    import { onDestroy, onMount } from \"svelte\";\n    import { TASK_COLUMN } from \"../constants\";\n    import Input from \"../utility/Input.svelte\";\n    import Button from \"../utility/Button.svelte\";\n    import Popup from \"../utility/Popup.svelte\";\n    import Icon from \"../utility/Icon.svelte\";\n    import Task from \"../Task.svelte\";\n    import {registerListener , unregisterListener, EVENTS} from '../EventManager';\n    import { getStatusClass, TASK_STATUS} from \"../constants\";\n\n    export let tasks = [];\n    let filtered_tasks = [];\n    let hasFilterApplied = false;\n    let showFilter = false;\n    let task_filter = {\n        status : \"\"\n    }\n    const POPUP = {\n        VIEW_TASK : false\n    }\n\n    const processClosePopup = (_popup) => {\n        POPUP[_popup] = false;   \n    }\n\n    let selected_task;\n\n    const processOpenTaskPopup = (task_id) => {\n        selected_task = tasks.filter(task => task.task_id === task_id)[0];\n        POPUP.VIEW_TASK = true;\n    }\n\n    const applyFilter = () => {\n        if(task_filter.status){\n            hasFilterApplied = true;\n            filtered_tasks = tasks.filter(task => task.task_status === task_filter.status);\n            filtered_tasks = filtered_tasks;\n        }\n    }\n\n    const handleFilterChange = (e) => {\n        task_filter[e.target.dataset.field] = e.target.value;\n    }\n\n    const clearFilter = () => {\n        filtered_tasks = tasks;\n        filtered_tasks = filtered_tasks;\n        hasFilterApplied = false;\n        task_filter.status = \"\";\n    }\n\n    const toggleFilter = () => {\n        showFilter = !showFilter;\n    }\n    \n    onMount( () => {\n        registerListener(EVENTS.OPEN_VIEW_TASK_POPUP,processOpenTaskPopup);\n        registerListener(EVENTS.CLOSE_POPUP,processClosePopup);\n        filtered_tasks = tasks;\n    });\n\n    onDestroy (()=> {\n        unregisterListener(EVENTS.OPEN_VIEW_TASK_POPUP,processOpenTaskPopup);\n        unregisterListener(EVENTS.CLOSE_POPUP,processClosePopup);\n    })\n\n</script>\n\n<div class=\"app-container flex align-center flex-column\">\n    {#if tasks && tasks.length}\n        <div class=\"filter-container relative {showFilter ? 'show-filter-class' : 'hide-filter-class'}\">\n            <div class=\"filter-toggle flex justify-end\">\n                {#if !showFilter}\n                    <Icon type=\"primary\" OnClick={toggleFilter}>\n                        <svg xmlns='http://www.w3.org/2000/svg' fill=\"currentcolor\" viewBox='0 0 24 24' width='24' height='24'>\n                            <path d=\"M21 3H5a1 1 0 0 0-1 1v2.59c0 .523.213 1.037.583 1.407L10 13.414V21a1.001 1.001 0 0 0 1.447.895l4-2c.339-.17.553-.516.553-.895v-5.586l5.417-5.417c.37-.37.583-.884.583-1.407V4a1 1 0 0 0-1-1zm-6.707 9.293A.996.996 0 0 0 14 13v5.382l-2 1V13a.996.996 0 0 0-.293-.707L6 6.59V5h14.001l.002 1.583-5.71 5.71z\"></path>\n                        </svg>\n                    </Icon>\n                    {:else}\n                    <Icon type=\"primary\" OnClick={toggleFilter}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"21px\" height=\"21px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"pointer\">\n                            <line data-v-6b93e4ba=\"\" x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                            <line data-v-6b93e4ba=\"\" x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                        </svg>\n                    </Icon>\n                {/if}\n            </div>\n            {#if showFilter}\n                <div class=\"flex form-header\">\n                    <div class=\"form-title\">Filters</div>\n                </div>\n                <div class=\"flex form-row\">\n                    <div class=\"flex flex-column form-column grow\">\n                        <Input data_type=\"field\" label=\"Status\" width_class=\"width-hald\" type=\"select\" classes={getStatusClass(task_filter.status)} value={task_filter.status} onChange={handleFilterChange} data_field=\"status\" options={TASK_STATUS}/>\n                    </div>\n                    \n                    <div class=\"flex form-column align-end justify-start\">\n                        <Button onClick={applyFilter} label=\"Apply\" type=\"primary\"/>\n                        {#if hasFilterApplied}\n                        &nbsp;&nbsp;\n                        <Button onClick={clearFilter} label=\"Clear\" type=\"danger\"/>\n                        {/if}\n                    </div>\n                </div>\n            {/if}\n        </div>\n    {/if}\n    \n\n    <div class=\"task-header flex align-center justify-space-between\">\n        <div class=\"flex align-center\">\n            <svg data-v-1134b199=\"\" xmlns=\"http://www.w3.org/2000/svg\" width=\"21px\" height=\"21px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon\">\n                <polyline data-v-1134b199=\"\" points=\"9 11 12 14 22 4\"></polyline>\n                <path data-v-1134b199=\"\" d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"></path>\n            </svg>\n            <span class=\"task-title\"> Tasks </span>\n        </div>\n    </div>\n\n    {#if filtered_tasks && filtered_tasks.length}\n        <div class=\"task-container flex justify-start align-center grow flex-column\">\n            <li class=\"columns flex justify-end align-center text-white text-bold\">\n                <div class=\"flex justify-center aggregator-container\">\n                    <span class=\"flex align-center justify-center badge grow badge-not-started\">{filtered_tasks.filter(task => task.task_status === \"Not Started\").length}</span>\n                    <span class=\"flex align-center justify-center badge grow badge-in-progress\">{filtered_tasks.filter(task => task.task_status === \"In Progress\").length}</span>\n                    <span class=\"flex align-center justify-center badge grow badge-completed\">{filtered_tasks.filter(task => task.task_status === \"Completed\").length}</span>\n                </div>\n            </li>\n            <li class=\"columns flex justify-space-between align-center text-white text-bold\">\n                {#each TASK_COLUMN as column}\n                    {#if column.show_in_list}\n                        <span class=\"column flex justify-center grow border-box text-bold {column.key}\">{ column.show_header ? column.label : ''}</span>    \n                    {/if}\n                {/each}\n            </li>\n            {#each filtered_tasks as task}\n                <Task {task} actions={['VIEW']}/>    \n            {/each}\n        </div>\n        {:else}\n        <div role=\"alert\" aria-live=\"polite\" aria-atomic=\"true\" class=\"alert alert-primary\" data-v-aa799a9e=\"\">\n            <div class=\"alert-body box-border\">\n                <span>No Tasks.</span>\n            </div>\n        </div>\n    {/if}\n</div>\n\n{#if POPUP.VIEW_TASK}\n    <Popup header=\"New Task\" _popup_name=\"VIEW_TASK\" showActions={false}>\n        <div class=\"flex flex-column justify-center\">\n\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Name\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent\" value={selected_task.task_name} data_field=\"task_name\" readOnly/>\n                </div>\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Status\" hasLabel width_class=\"width-full\" type=\"select\" classes={getStatusClass(selected_task.task_status)} value={selected_task.task_status} data_field=\"task_status\" options={TASK_STATUS} readOnly/>\n                </div>\n                \n            </div>\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Start Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent\" value={selected_task.task_start_date} data_field=\"task_start_date\" readOnly/>\n                </div>\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"End Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent\" value={selected_task.task_end_date} data_field=\"task_end_date\" readOnly/>\n                </div>\n                \n            </div>\n            <div class=\"flex form-row\">\n\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Description\" hasLabel width_class=\"width-full\" type=\"text-long\" classes=\"bg-transparent\" value={selected_task.task_description} data_field=\"task_description\" readOnly/>\n                </div>\n                \n            </div>\n            \n        </div>\n    </Popup>\n{/if}\n\n<style>\n\n    .app-container{\n        margin:0;\n        padding: 0;\n        height: 100vh;\n        width: 95vw;\n        margin-left: 5vw;\n    }\n\n    .task-header , .task-container{\n        width : 80%\n    }\n\n    .task-header{\n        border-bottom: 1px solid var(--border-tertiary-color);\n        margin: 5vh 0 5px 0;\n        padding: 8px 0;\n        color : var(--primary-color);\n    }\n\n    .task-title{\n        font-size: 1.5rem;\n        color: var(--primary-color);\n    }\n\n    .columns{\n        width: 100%;\n        list-style: none;\n    }\n\n    .form-row{\n        padding: 1rem 0;\n    }\n\n    .form-column{\n        padding: 0 1rem;\n        width: 50%;\n    }\n\n    .column{\n        padding: 0.5rem;\n    }\n\n    .task_name{\n        width: 55%;\n    }\n\n    .task_start_date,.task_end_date{\n        width: 15%;\n    }\n\n    .task_status{\n        width: 15%;\n    }\n\n    .column:first-of-type{\n        border-left: 0;\n    }\n\n    .column:last-of-type{\n        border-right: 0;\n    }\n\n    .action-container{\n        width: 10%;\n    }\n    \n    .task-note{\n        width: 100%;\n    }\n\n    .icon{\n        color: var(--primary-color);\n        font-weight: 400;\n    }\n\n    .task-header .icon{\n        margin-right : 5px;\n    }\n\n    .alert{\n        background-color: rgba(115,103,240,.12);\n        border: none;\n        padding: 0;\n        border-radius: 0.3rem;\n        color : var(--primary-color);\n        width: 80%;\n    }\n\n    .alert-body{\n        padding: .71rem 1rem;\n    }\n\n    .bullet{\n        width: .714rem;\n        height: .714rem;\n        border-radius: 50%;\n    }\n\n    .filter-container{\n        width : 80%\n    }\n\n    .filter-container{\n        box-shadow: 0 4px 24px 0 rgb(34 41 47 / 24%);\n        border-radius: 5px;\n    }\n\n    .form-title{\n        font-size: 1.25rem;\n        color: var(--primary-color);\n    }\n\n    .form-header{\n        padding: 1rem 1rem 0 1rem;\n    }\n\n    .filter-toggle{\n        padding : .5rem;\n        right : 0;\n    }\n\n    .show-filter-class{\n        background-color: #7367f01f;\n        margin-top: 5vh;\n    }\n\n    .hide-filter-class{\n        margin-bottom: 0vh;\n    }\n\n    .aggregator-container{\n        width: 15%;\n    }\n\n    .aggregator-container{\n        height: 40px;\n    }\n\n</style>","<script>\n    import { onDestroy, onMount } from \"svelte\";\n    import Input from \"../utility/Input.svelte\";\n    import Button from \"../utility/Button.svelte\";\n    import Popup from \"../utility/Popup.svelte\";\n    import Icon from \"../utility/Icon.svelte\";\n    import Component from \"../Component.svelte\";\n    import { AUTH } from \"../firebase\";\n    import { exportListComponentsCallout } from \"../api\";\n    import {fireEvent, registerListener , unregisterListener,EVENTS} from '../EventManager';\n    import { getComponentTypeClass,COMPONENT_COLUMN, COMPONENT_TYPE_LIST} from \"../constants\";\n    \n    export let components = [];\n    let hasFilterApplied = false;\n    let showFilter = false;\n    let filtered_components = [];\n    const POPUP = {\n        VIEW_COMPONENT : false\n    }\n\n    const processClosePopup = (_popup) => {\n        POPUP[_popup] = false;   \n    }\n\n    let component_filter = {\n        component_start_date : \"\",\n        component_end_date : \"\",\n    } \n\n    let selected_component;\n\n    const processOpenComponentPopup = (component_id) => {\n        selected_component = components.filter(component => component.component_id === component_id)[0];\n        POPUP.VIEW_COMPONENT = true;\n    }\n\n    const handleFilterChange = (e) => {\n        component_filter[e.target.dataset.field] = e.target.value;\n    }\n\n    const applyFilter = () => {\n        if(component_filter.component_start_date && component_filter.component_end_date){\n            const component_start_date = new Date(component_filter.component_start_date);\n            const component_end_date = new Date(component_filter.component_end_date);\n            if( component_end_date - component_start_date >= 0){\n                hasFilterApplied = true;\n                filtered_components = [];\n                for(let component of components){\n                    const component_date = new Date(component.component_date);\n                    if( component_date <= component_end_date && component_date >= component_start_date ){\n                        filtered_components.push(component);\n                    }\n                }\n                filtered_components = filtered_components;\n            }\n        }\n    }\n\n    const clearFilter = () => {\n        filtered_components = components;\n        filtered_components = filtered_components;\n        hasFilterApplied = false;\n    }\n\n    const toggleFilter = () => {\n        showFilter = !showFilter;\n    }\n\n    const exportComponents = () => {\n        const data = JSON.stringify(filtered_components);\n        const file_name = 'AllComponents '+new Date()+'.csv';\n        fireEvent(EVENTS.SHOW_SPINNER,{});\n        exportListComponentsCallout(\n            AUTH.currentUser.uid,\n            file_name,\n            data  \n        ).then(res => {\n            const exportURL = URL.createObjectURL(res);\n            const aTag = document.createElement(\"a\");\n            document.body.appendChild(aTag);\n            aTag.style = \"display: none\";\n            aTag.href = exportURL;\n            aTag.download = file_name;\n            aTag.click();\n            window.URL.revokeObjectURL(exportURL);\n            document.body.removeChild(aTag);\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n        }) \n        .catch(err => {\n            fireEvent(EVENTS.HIDE_SPINNER,{});\n            console.error(err);\n        });\n    }\n\n    onMount( () => {\n        registerListener(EVENTS.OPEN_VIEW_COMPONENT_POPUP,processOpenComponentPopup);\n        registerListener(EVENTS.CLOSE_POPUP,processClosePopup);\n        filtered_components = components;\n    });\n\n    onDestroy(()=>{\n        unregisterListener(EVENTS.OPEN_VIEW_COMPONENT_POPUP,processOpenComponentPopup);\n        unregisterListener(EVENTS.CLOSE_POPUP,processClosePopup);\n    })\n\n</script>\n<div class=\"app-container flex align-center flex-column\">\n    {#if components && components.length}\n        <div class=\"filter-container relative {showFilter ? 'show-filter-class' : 'hide-filter-class'}\">\n            <div class=\"filter-toggle flex justify-end\">\n                {#if !showFilter}\n                    <Icon type=\"primary\" OnClick={toggleFilter}>\n                        <svg xmlns='http://www.w3.org/2000/svg' fill=\"currentcolor\" viewBox='0 0 24 24' width='24' height='24'>\n                            <path d=\"M21 3H5a1 1 0 0 0-1 1v2.59c0 .523.213 1.037.583 1.407L10 13.414V21a1.001 1.001 0 0 0 1.447.895l4-2c.339-.17.553-.516.553-.895v-5.586l5.417-5.417c.37-.37.583-.884.583-1.407V4a1 1 0 0 0-1-1zm-6.707 9.293A.996.996 0 0 0 14 13v5.382l-2 1V13a.996.996 0 0 0-.293-.707L6 6.59V5h14.001l.002 1.583-5.71 5.71z\"></path>\n                        </svg>\n                    </Icon>\n                    {:else}\n                    <Icon type=\"primary\" OnClick={toggleFilter}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"21px\" height=\"21px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"pointer\">\n                            <line data-v-6b93e4ba=\"\" x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                            <line data-v-6b93e4ba=\"\" x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                        </svg>\n                    </Icon>\n                {/if}\n            </div>\n            {#if showFilter}\n                <div class=\"flex form-header\">\n                    <div class=\"form-title\">Filters</div>\n                </div>\n                <div class=\"flex form-row\">\n                    <div class=\"flex flex-column form-column grow\">\n                        <Input data_type=\"field\" label=\"Start Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent\" value={component_filter.component_start_date} onChange={handleFilterChange} data_field=\"component_start_date\" />\n                    </div>\n                    <div class=\"flex flex-column form-column grow\">\n                        <Input data_type=\"field\" label=\"End Date\" hasLabel width_class=\"width-full\" type=\"date\" classes=\"bg-transparent\" value={component_filter.component_end_date} onChange={handleFilterChange} data_field=\"component_end_date\" />\n                    </div>\n                    <div class=\"flex form-column align-end justify-start\">\n                        <Button onClick={applyFilter} label=\"Apply\" type=\"primary\"/>\n                        {#if hasFilterApplied}\n                            &nbsp;&nbsp;\n                            <Button onClick={clearFilter} label=\"Clear\" type=\"danger\"/>\n                        {/if}\n                    </div>\n                </div>\n            {/if}\n            \n        </div>\n    {/if}\n    \n    <div class=\"task-header flex align-center justify-space-between\">\n        <div class=\"flex align-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25px\" height=\"25px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon\">\n                <path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path>\n                <polyline points=\"13 2 13 9 20 9\"></polyline>\n            </svg>\n            <span class=\"task-title\"> Components </span>\n        </div>\n        <div class=\"flex align-center\">\n            {#if filtered_components && filtered_components.length}\n                <Icon type=\"danger\" OnClick={exportComponents}>\n                    <svg data-v-9a6e255c=\"\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-download\">\n                        <path data-v-9a6e255c=\"\" d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path><polyline data-v-9a6e255c=\"\" points=\"7 10 12 15 17 10\"></polyline><line data-v-9a6e255c=\"\" x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\n                    </svg>\n                </Icon>&nbsp;&nbsp;\n            {/if}\n        </div>\n        \n    </div>\n    \n    {#if filtered_components && filtered_components.length}\n        <div class=\"task-container flex justify-start align-center grow flex-column\">\n            <li class=\"columns flex justify-space-between align-center text-white text-bold\">\n                {#each COMPONENT_COLUMN as column}\n                    {#if column.show_in_list}\n                        <span class=\"column flex grow justify-center grow border-box text-bold {column.key}\">{ column.show_header ? column.label : ''}</span>    \n                    {/if}\n                {/each}\n            </li>\n            {#each filtered_components as component}\n                <Component {component} actions={['VIEW']}/>    \n            {/each}\n        </div>\n        {:else}\n        <div role=\"alert\" aria-live=\"polite\" aria-atomic=\"true\" class=\"alert alert-primary\" data-v-aa799a9e=\"\">\n            <div class=\"alert-body box-border\">\n                <span>No Components.</span>\n            </div>\n        </div>\n    {/if}\n    \n</div>\n\n{#if POPUP.VIEW_COMPONENT}\n    <Popup header=\"New Component\" _popup_name=\"VIEW_COMPONENT\" showActions={false}>\n        <div class=\"flex flex-column justify-center\">\n            <div class=\"flex form-row\">\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Name\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent\" value={selected_component.component_name} data_field=\"component_name\" readOnly/>\n                </div>\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Type\" hasLabel width_class=\"width-full\" type=\"select\" classes=\"bg-transparent {getComponentTypeClass(selected_component.component_type)}\" value={selected_component.component_type} data_field=\"component_type\" options={COMPONENT_TYPE_LIST} readOnly/>\n                </div>\n            </div>\n            <div class=\"flex form-row\">\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Version\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent\" value={selected_component.component_version} data_field=\"component_version\" readOnly/>\n                </div>\n                <div class=\"flex flex-column form-column grow\">\n                    <Input data_type=\"field\" label=\"Parent Component (if any)\" hasLabel width_class=\"width-full\" type=\"text\" classes=\"bg-transparent\" value={selected_component.component_parent_name} data_field=\"component_parent_name\" readOnly/>\n                </div>\n            </div>\n        </div>\n    </Popup>\n{/if}\n\n<style>\n\n    .app-container{\n        margin:0;\n        padding: 0;\n        height: 100vh;\n        width: 95vw;\n        margin-left: 5vw;\n    }\n\n    .task-header , .task-container,.filter-container{\n        width : 80%\n    }\n\n    .filter-container{\n        box-shadow: 0 4px 24px 0 rgb(34 41 47 / 24%);\n        border-radius: 5px;\n    }\n\n    .task-header{\n        border-bottom: 1px solid var(--border-tertiary-color);\n        margin: 2vh 0 5px 0;\n        padding: 8px 0;\n        color : var(--primary-color);\n    }\n\n    .task-title{\n        font-size: 1.5rem;\n        color: var(--primary-color);\n    }\n\n    .form-title{\n        font-size: 1.25rem;\n        color: var(--primary-color);\n    }\n\n    .columns{\n        width: 100%;\n        list-style: none;\n    }\n\n    .form-header{\n        padding: 1rem 1rem 0 1rem;\n    }\n\n    .form-row{\n        padding: 1rem 0;\n    }\n\n    .form-column{\n        padding: 0 1rem;\n        width: 50%;\n    }\n\n    .column{\n        padding: 0.5rem;\n    }\n\n    .task_name{\n        width: 55%;\n    }\n\n    .task_start_date,.task_end_date{\n        width: 15%;\n    }\n\n    .task_status{\n        width: 15%;\n    }\n\n    .column:first-of-type{\n        border-left: 0;\n    }\n\n    .column:last-of-type{\n        border-right: 0;\n    }\n\n    .action-container{\n        width: 10%;\n    }\n    \n    .task-note{\n        width: 100%;\n    }\n\n    .icon{\n        color: var(--primary-color);\n        font-weight: 400;\n    }\n\n    .task-header .icon{\n        margin-right : 5px;\n    }\n\n    .alert{\n        background-color: rgba(115,103,240,.12);\n        border: none;\n        padding: 0;\n        border-radius: 0.3rem;\n        color : var(--primary-color);\n        width: 80%;\n    }\n\n    .alert-body{\n        padding: .71rem 1rem;\n    }\n\n    .bullet{\n        width: .714rem;\n        height: .714rem;\n        border-radius: 50%;\n    }\n\n    .filter-toggle{\n        padding : .5rem;\n        right : 0;\n    }\n\n    .show-filter-class{\n        background-color: #7367f01f;\n        margin-top: 5vh;\n    }\n\n    .hide-filter-class{\n        margin-bottom: 0vh;\n    }\n\n</style>","<script>\n    export let show;\n</script>\n\n{#if show}\n    <div class=\"main-container flex align-center flex-column justify-center bg-transparent\">\n        <div class=\"flex align-center text-primary\">\n            <img class=\"logo\" src=\"./logo.svg\" alt=\"oneList\"/>\n        </div>\n    </div>\n{/if}\n\n\n<style>\n    \n    .logo {\n        width: 8em;\n        height: 8em;\n    }\n\n    .main-container{\n        margin:0;\n        padding: 0;\n        height: 100vh;\n    }\n\n</style>","<script>\n    export let show = true;\n</script>\n\n{#if show}\n    <div class=\"spinner-container flex justify-center align-center fixed flex-column\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"red\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin: auto; background: rgb(241, 242, 243 / 0%); display: block;\" width=\"100px\" height=\"100px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <circle cx=\"50\" cy=\"50\" r=\"16\" stroke-width=\"4\" stroke=\"#7367f0\" stroke-dasharray=\"50.26548245743669 50.26548245743669\" fill=\"none\" stroke-linecap=\"round\">\n              <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" dur=\"1s\" keyTimes=\"0;1\" values=\"0 50 50;360 50 50\"></animateTransform>\n            </circle>\n        </svg>\n    </div>\n{/if}\n\n<style>\n    .spinner-container{\n        z-index: 10;\n        width: 100%;\n        height: 100%;\n    }\n</style>","<script>\n\timport { AUTH } from \"./firebase\";\n\timport LoginPage from \"./Pages/LoginPage.svelte\";\n\timport AppPage from \"./Pages/AppPage.svelte\";\n\timport GeneralTasksPage from \"./Pages/GeneralTasksPage.svelte\";\n\timport Navigation from \"./Navigation.svelte\";\n\timport AllTasksPage from \"./Pages/AllTasksPage.svelte\";\n\timport AllComponentsPage from \"./Pages/AllComponentsPage.svelte\";\n\timport LoadSpinner from \"./utility/LoadSpinner.svelte\";\n\timport ProcessSpinner from \"./utility/ProcessSpinner.svelte\";\n    import {registerListener , unregisterListener, fireEvent, EVENTS} from './EventManager';\n\timport { onDestroy, onMount } from \"svelte\";\n\n\tlet currentUser;\n\tlet isProcessing = false;\n\tlet showInitLoad = true;\n\tlet view;\n\tlet all_tasks = [];\n\tlet all_components = [];\n\n\tconst showSpinner = () =>  {\n    \tisProcessing = true;\n\t\tisProcessing = isProcessing;\n\t}\n\n\tconst hideSpinner = () =>  {\n    \tisProcessing = false;\n\t\tisProcessing = isProcessing;\n\t}\n\n\tAUTH.onAuthStateChanged((user) => {\n\t\tif (user && user.uid) {\n\t\t\tcurrentUser = user;\n\t\t} else {\n\t\t\tcurrentUser = null;\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tshowInitLoad = false;\n\t\t}, 500);\n\t});\n\n\tconst getViewType = () => {\n\t\tif(!window.localStorage.getItem('WORKLIST')){\n\t\t\tlet WORKLIST = {\n\t\t\t\tview : \"LISTS\"\n\t\t\t}\n\t\t\twindow.localStorage.setItem('WORKLIST',JSON.stringify(WORKLIST));\n\t\t}\n\n\t\tlet WORKLIST = JSON.parse(window.localStorage.getItem('WORKLIST'));\n\t\treturn WORKLIST.view;\n\t}\n\n\tconst getNewViewData = (_view) => {\n\t\tfireEvent(EVENTS.GET_VIEW_DATA,{\n\t\t\tnew_view : _view,\n\t\t\tcurrent_view : view\n\t\t});\n\t}\n\n\tconst changeView = (_data) => {\n\t\tif(_data.view === \"ALLTASKS\"){\n\t\t\tall_tasks = _data.data;\n\t\t\tall_components = [];\n\t\t}else if(_data.view === \"ALLCOMPONENTS\"){\n\t\t\tall_tasks = [];\n\t\t\tall_components = _data.data;\n\t\t}\n\t\tview = _data.view;\n\t}\n\n\tonMount(() => {\n\t\tregisterListener(EVENTS.SHOW_SPINNER,showSpinner);\n\t\tregisterListener(EVENTS.HIDE_SPINNER,hideSpinner);\n\t\tregisterListener(EVENTS.SELECT_VIEW,getNewViewData);\n\t\tregisterListener(EVENTS.SEND_VIEW_DATA,changeView);\n\t\tview = getViewType();\n\t});\n\n\tonDestroy ( () => {\n\t\tunregisterListener(EVENTS.SHOW_SPINNER,showSpinner);\n\t\tunregisterListener(EVENTS.HIDE_SPINNER,hideSpinner);\n\t\t/* **** */\n\t\t// unregisterListener(EVENTS.SELECT_VIEW,getNewViewData);\n\t\t// unregisterListener(EVENTS.SEND_VIEW_DATA,changeView);\n\t})\n\n</script>\n\n<main>\n\t<ProcessSpinner show={isProcessing}/>\n\t<LoadSpinner show={showInitLoad}/>\n\t\n\t{#if !showInitLoad}\n\t\t{#if currentUser}\n\t\t\t<Navigation currentView={view}/>\n\t\t\t{#if view == \"ALLTASKS\"}\t\n\t\t\t\t<AllTasksPage tasks={all_tasks}/>\n\t\t\t\t{:else if view == \"ALLCOMPONENTS\"}\n\t\t\t\t<AllComponentsPage components={all_components}/>\n\t\t\t\t{:else if view == \"GENERALTASKS\"}\n\t\t\t\t<GeneralTasksPage />\n\t\t\t\t{:else}\n\t\t\t\t<AppPage/>\n\t\t\t{/if}\n\t\t\t{:else}\n\t\t\t<LoginPage />\n\t\t{/if}\n\t{/if}\n</main>\n","import App from './App.svelte';\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","add_location","element","file","line","column","char","__svelte_meta","loc","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","null_to_empty","value","detach","node","parentNode","removeChild","destroy_each","iterations","detaching","d","name","svg_element","createElementNS","text","data","createTextNode","space","empty","set_style","key","important","style","setProperty","select_option","select","options","option","__value","selected","selectedIndex","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","onDestroy","on_destroy","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","globalThis","global","create_component","mount_component","target","anchor","customElement","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","dispatch_dev","type","detail","dispatchEvent","bubbles","e","createEvent","initCustomEvent","custom_event","version","append_dev","appendChild","append","insert_dev","insertBefore","insert","detach_dev","listen_dev","event","handler","has_prevent_default","has_stop_propagation","modifiers","keys","dispose","addEventListener","removeEventListener","listen","attr_dev","attribute","removeAttribute","getAttribute","setAttribute","attr","prop_dev","property","set_data_dev","wholeText","validate_each_argument","arg","msg","Symbol","iterator","validate_slots","slot_key","indexOf","console","warn","SvelteComponentDev","$destroy","this","$on","index","splice","$set","$$props","obj","$$set","constructor","$$inline","super","$capture_state","$inject_state","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","freeze","firebase","initializeApp","signinUser","email","password","auth","signInWithEmailAndPassword","signoutUser","signOut","AUTH","events","EVENTS","SHOW_SPINNER","HIDE_SPINNER","SELECT_VIEW","GET_VIEW_DATA","SEND_VIEW_DATA","SELECT_LIST","OPEN_NEW_LIST_POPUP","OPEN_EDIT_LIST_POPUP","DELETE_LIST","SELECT_TASK","OPEN_NEW_TASK_POPUP","OPEN_VIEW_TASK_POPUP","OPEN_EDIT_TASK_POPUP","DELETE_TASK","OPEN_NEW_COMPONENT_POPUP","OPEN_VIEW_COMPONENT_POPUP","OPEN_EDIT_COMPONENT_POPUP","DELETE_COMPONENET","CLOSE_POPUP","registerListener","eventName","find","listener","error","unregisterListener","cb","fireEvent","payload","call","label","onClick","hasLabel","placeholder","onChange","onKeyUp","width_class","label_class","classes","data_field","data_type","readOnly","Required","user","handleChange","onSignIn","res","catch","err","API","BASE_ENDPOINT","ENDPOINTS","getUserData","getUserGeneralTasks","createList","updateList","deleteList","createTask","updateTask","deleteTask","createGeneralTask","updateGeneralTask","deleteGeneralTask","deleteBulkGeneralTask","createComponent","updateComponent","deleteComponent","exportListComponents","DEFAULTS","LIST_STATUS","TASK_STATUS","COMPONENT_TYPE","COMPONENT_TYPE_LIST","TASK_COLUMN","show_in_list","show_in_detail","show_header","allow_inline_edit","field_type","COMPONENT_COLUMN","getStatusClass","_status","replace","getComponentTypeClass","_type","getBulletClass","getUserDataCallout","user_id","fetch","method","body","JSON","stringify","json","getUserGeneralTasksCallout","createListCallout","list_name","list_detail","updateListCallout","list_id","deleteListCallout","createTaskCallout","task_name","task_detail","list_task_root_id","updateTaskCallout","task_id","deleteTaskCallout","createGeneralTaskCallout","updateGeneralTaskCallout","deleteGeneralTaskCallout","deleteGeneralBulkTaskCallout","task_ids","createComponentCallout","component_name","component_detail","list_component_root_id","updateComponentCallout","component_id","deleteComponentCallout","exportListComponentsCallout","file_name","blob","header","OnSave","showSave","showActions","saveLabel","_popup_name","fireClosePopupEvent","OnClose","OnClick","lists","selected_list_id","sendSelectListEvent","evt","currentTarget","dataset","id","sendNewListEvent","includes","task_start_date","task_end_date","task_status","task","actions","allowSelection","isSelected","sendOpenTaskDetailEvent","sendDeleteTaskDetailEvent","sendViewTaskDetailEvent","onSelect","checked","component_version","component_date","component_parent_name","component_type","sendOpenComponentDetailEvent","sendDeleteComponentDetailEvent","sendViewComponentDetailEvent","list_tasks","list_components","list_status","selected_list","handleListChange","field","sendNewTaskEvent","sendNewComponentEvent","sendEditListEvent","sendDeleteListEvent","log","exportComponents","currentUser","uid","exportURL","URL","createObjectURL","aTag","download","click","revokeObjectURL","list_start_date","list_end_date","list_description","task_description","NEW_LIST","EDIT_LIST","NEW_TASK","EDIT_TASK","NEW_COMPONENT","EDIT_COMPONENT","store","POPUP","processClosePopup","_popup","parse","backup_selected_list","new_list","list_fields","handleNewListChange","handleExistingListChange","processOpenNewListPopup","processSelectListEvent","list","processEditListPopup","saveNewList","start_date","Date","description","status","end_date","processDeleteList","confirm","selected_task","backup_selected_task","new_task","task_fields","handleNewTaskChange","handleExistingTaskChange","processOpenTaskPopup","processEditTaskPopup","saveNewTask","selected_list_index","findIndex","selected_task_index","processDeleteTask","selected_component","backup_selected_component","new_component","component_fields","handleNewComponentChange","handleExistingComponentChange","processOpenComponentPopup","processEditComponentPopup","saveNewComponent","date","selected_component_index","processDeleteComponent","processViewData","new_view","current_view","tasks","view","components","filtered_tasks","selected_tasks","openNewTaskPopup","hasFilterApplied","showFilter","task_filter","processSelectTask","taskId","applyFilter","deleteBulkTasks","handleFilterChange","clearFilter","toggleFilter","currentView","sendChangeView","VIEW_TASK","component_start_date","component_end_date","VIEW_COMPONENT","filtered_components","component_filter","show","isProcessing","showInitLoad","all_tasks","all_components","showSpinner","hideSpinner","onAuthStateChanged","setTimeout","getViewType","localStorage","getItem","WORKLIST","setItem","getNewViewData","_view","changeView","_data"],"mappings":"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"}